<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>以甯为意</title>
  
  
  <link href="https://junonin.github.io/atom.xml" rel="self"/>
  
  <link href="https://junonin.github.io/"/>
  <updated>2021-02-04T07:48:23.018Z</updated>
  <id>https://junonin.github.io/</id>
  
  <author>
    <name>Juno Nin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring Pom Properties</title>
    <link href="https://junonin.github.io/posts/87c331c7.html"/>
    <id>https://junonin.github.io/posts/87c331c7.html</id>
    <published>2021-01-20T09:16:29.000Z</published>
    <updated>2021-02-04T07:48:23.018Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Spring properties yml yaml记录</p></blockquote><h2 id="spring-profiles-active和spring-profiles-include的区别与使用"><a href="#spring-profiles-active和spring-profiles-include的区别与使用" class="headerlink" title="spring.profiles.active和spring.profiles.include的区别与使用"></a>spring.profiles.active和spring.profiles.include的区别与使用</h2><h3 id="spring-profiles-active属性"><a href="#spring-profiles-active属性" class="headerlink" title="spring.profiles.active属性"></a>spring.profiles.active属性</h3><ul><li>遵循application-${profile}.properties。</li></ul><ol><li>开发环境配置文件：application-dev.properties</li><li>测试环境配置文件：application-test.properties</li><li>生产环境配置文件：application-prod.properties</li></ol><ul><li>根据部署场景不同，切换不同的配置文件：配置spring.profiles.active，属性值为${profile}。</li></ul><ol><li>spring.profiles.active=dev：启用application-dev.properties</li><li>spring.profiles.active=test：启用application-test.properties</li><li>spring.profiles.active=prod：启用application-prod.properties</li></ol><ul><li>启动时指定： 在执行有参启动时，可以在命令中进行指定要选用的配置文件，例如：<br><code>java -jar xx.jar --spring.profiles.active=dev</code><br>这个命令的优先级是最高的，即使application.properties中已经配置spring.profiles.active=dev，最终程序还是会用application-test.properties配置文件。</li></ul><h3 id="spring-profiles-include属性"><a href="#spring-profiles-include属性" class="headerlink" title="spring.profiles.include属性"></a>spring.profiles.include属性</h3><ul><li><p>pring.profiles.include属性：同时启用其他的profile<br>即在启用application-dev.properties开发环境（主）配置文件时，同时启用application-dev1.properties和application-dev2.propertie。</p></li><li><p>配置方法</p></li></ul><ol><li>若是properties文件：<code>spring.profiles.include=dev1,dev2</code></li><li>若是yaml文件中， <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring.profiles.include:</span></span><br><span class="line"><span class="string">-dev1</span></span><br><span class="line"><span class="string">-dev2</span></span><br></pre></td></tr></table></figure> 或者：<code>spring.profiles.include:dev1,dev2</code></li></ol><h2 id="配置多个properties，多环境配置"><a href="#配置多个properties，多环境配置" class="headerlink" title="配置多个properties，多环境配置"></a>配置多个properties，多环境配置</h2><ul><li><p>application.properties/yml配置</p><p><code>spring.profiles.active=@profileActive@</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">@profileActive@</span></span><br></pre></td></tr></table></figure></li><li><p>pom.xml中profiles配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">多环境配置方案</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">&lt;profiles&gt;</span></span><br><span class="line">    <span class="string">&lt;profile&gt;</span></span><br><span class="line">        <span class="string">&lt;id&gt;dev&lt;/id&gt;</span></span><br><span class="line">        <span class="string">&lt;properties&gt;</span></span><br><span class="line">            <span class="string">&lt;profileActive&gt;dev&lt;/profileActive&gt;</span></span><br><span class="line">        <span class="string">&lt;/properties&gt;</span></span><br><span class="line">        <span class="string">&lt;activation&gt;</span></span><br><span class="line">            <span class="string">&lt;!--</span> <span class="string">默认情况下使用dev开发配置</span> <span class="string">如</span> <span class="string">打包时不包含</span> <span class="string">-p</span> <span class="string">参数</span> <span class="string">--&gt;</span></span><br><span class="line">            <span class="string">&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span></span><br><span class="line">        <span class="string">&lt;/activation&gt;</span></span><br><span class="line">    <span class="string">&lt;/profile&gt;</span></span><br><span class="line">    <span class="string">&lt;profile&gt;</span></span><br><span class="line">        <span class="string">&lt;id&gt;prod&lt;/id&gt;</span></span><br><span class="line">        <span class="string">&lt;properties&gt;</span></span><br><span class="line">            <span class="string">&lt;profileActive&gt;prod&lt;/profileActive&gt;</span></span><br><span class="line">        <span class="string">&lt;/properties&gt;</span></span><br><span class="line">    <span class="string">&lt;/profile&gt;</span></span><br><span class="line"><span class="string">&lt;/profiles&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&lt;resources&gt;</span></span><br><span class="line">    <span class="string">&lt;resource&gt;</span></span><br><span class="line">        <span class="string">&lt;directory&gt;src/main/resources&lt;/directory&gt;</span></span><br><span class="line">        <span class="string">&lt;filtering&gt;true&lt;/filtering&gt;</span></span><br><span class="line">    <span class="string">&lt;/resource&gt;</span></span><br><span class="line">    <span class="string">&lt;resource&gt;</span></span><br><span class="line">        <span class="string">&lt;directory&gt;src/main/java&lt;/directory&gt;</span></span><br><span class="line">        <span class="string">&lt;includes&gt;</span></span><br><span class="line">            <span class="string">&lt;include&gt;**/*.xml&lt;/include&gt;</span></span><br><span class="line">            <span class="string">&lt;include&gt;**/*.json&lt;/include&gt;</span></span><br><span class="line">            <span class="string">&lt;!--</span> <span class="string">resource可以用$&#123;profileActive&#125;配置</span> <span class="string">--&gt;</span></span><br><span class="line">            <span class="string">&lt;include&gt;application-$&#123;profileActive&#125;.yml&lt;/include&gt;</span></span><br><span class="line">        <span class="string">&lt;/includes&gt;</span></span><br><span class="line">    <span class="string">&lt;/resource&gt;</span></span><br><span class="line"><span class="string">&lt;/resources&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>多环境使用<br>打包命令</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mvn package -P dev -DskipTests</span><br><span class="line"></span><br><span class="line">mvn package -P prod -DskipTests</span><br></pre></td></tr></table></figure><p>在dev环境下使用<br><code>@Profile(&quot;dev&quot;)</code></p><h2 id="Spring-Boot读取properties配置文件中的数据"><a href="#Spring-Boot读取properties配置文件中的数据" class="headerlink" title="Spring Boot读取properties配置文件中的数据"></a>Spring Boot读取properties配置文件中的数据</h2><h3 id="1、使用-Value注解读取"><a href="#1、使用-Value注解读取" class="headerlink" title="1、使用@Value注解读取"></a>1、使用@Value注解读取</h3><pre><code>application.properties/yml：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">demo.name=Name</span></span><br><span class="line"><span class="string">demo.age=18</span></span><br></pre></td></tr></table></figure>JAVA代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Value(&quot;$&#123;demo.name&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value(&quot;$&#123;demo.age&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String age;</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><h3 id="2、使用Environment读取"><a href="#2、使用Environment读取" class="headerlink" title="2、使用Environment读取"></a>2、使用Environment读取</h3><pre><code>application.properties/yml：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">demo.name=Name</span></span><br><span class="line"><span class="string">demo.age=18</span></span><br></pre></td></tr></table></figure>JAVA代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.core.env.Environment;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Environment environment;</span><br><span class="line"></span><br><span class="line">environment.getProperty(<span class="string">&quot;demo.name&quot;</span>)</span><br><span class="line">environment.getProperty(<span class="string">&quot;demo.age&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure>如果发现中文乱码可以修改application.properties/yml:<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">server.tomcat.uri-encoding=UTF-8</span></span><br><span class="line"><span class="string">spring.http.encoding.charset=UTF-8</span></span><br><span class="line"><span class="string">spring.http.encoding.enabled=true</span></span><br><span class="line"><span class="string">spring.http.encoding.force=true</span></span><br><span class="line"><span class="string">spring.messages.encoding=UTF-8</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="3、使用-ConfigurationProperties注解读取"><a href="#3、使用-ConfigurationProperties注解读取" class="headerlink" title="3、使用@ConfigurationProperties注解读取"></a>3、使用@ConfigurationProperties注解读取</h3><pre><code>application.properties/yml：<figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">demo.web.title=Name</span></span><br><span class="line"><span class="string">demo.web.age=18</span></span><br></pre></td></tr></table></figure>JAVA代码：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Data</span>    </span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;demo&quot;)</span>   <span class="comment">//节点</span></span><br><span class="line"><span class="meta">@PropertySource(value = &quot;config.properties&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConfigBeanProp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Web web = <span class="keyword">new</span> Web(); <span class="comment">//子节点</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Data</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Web</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String title = <span class="string">&quot;xxx&quot;</span>;  <span class="comment">//可以设置缺省值</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> String age = <span class="string">&quot;20&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>@Component 表示将该类标识为Bean@ConfigurationProperties(prefix = &quot;demo&quot;)用于绑定属性，其中prefix表示所绑定的属性的前缀。@PropertySource(value = &quot;config.properties&quot;)表示配置文件路径。</code></pre>]]></content>
    
    
    <summary type="html">Spring properties yml yaml</summary>
    
    
    
    <category term="JAVA" scheme="https://junonin.github.io/categories/JAVA/"/>
    
    <category term="Spring" scheme="https://junonin.github.io/categories/JAVA/Spring/"/>
    
    
    <category term="Spring" scheme="https://junonin.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Mysql</title>
    <link href="https://junonin.github.io/posts/9520183a.html"/>
    <id>https://junonin.github.io/posts/9520183a.html</id>
    <published>2021-01-18T08:16:28.000Z</published>
    <updated>2021-01-30T09:54:44.461Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Mysql学习记录</p></blockquote><h2 id="explain"><a href="#explain" class="headerlink" title="explain"></a>explain</h2><ul><li>Type常用的类型有： ALL/全表、index/索引、range/索引范围、 ref/非唯一索引扫描或唯一索引前缀扫描、eq_ref/唯一索引，主键、const/system/主键或唯一索引的单记录、NULL/不访问任何表或索引直接返回结果（从左到右，性能从差到好）</li></ul><h2 id="表设计"><a href="#表设计" class="headerlink" title="表设计"></a>表设计</h2><ol><li><p>用0代替NULL。</p></li><li><p>INT，TINYINT，SMALL。</p></li><li><p>枚举，整数，代替字符串类型。</p></li><li><p>TimeSamp代替Datatime。datetime 占用8个字节，timestamp 占用4个字节。而 timestamp 表示的范围是 1970—2037 适合做更新时间。</p></li><li><p>单表字段&lt;20个。</p></li><li><p>整型存IP。</p></li></ol><h2 id="索引设计"><a href="#索引设计" class="headerlink" title="索引设计"></a>索引设计</h2><ol><li><p>值分布很稀少的字段不适合建索引，例如”性别”这种只有两三个值的字段。</p></li><li><p>字符字段只建前缀索引。</p></li><li><p>字符字段最好不要做主键</p></li><li><p>不用外键，由程序保证约束</p></li><li><p>尽量不用UNIQUE，由程序保证约束</p></li><li><p>使用多列索引时主意顺序和查询条件保持一致，同时删除不必要的单列索引</p></li></ol><h2 id="分区设计"><a href="#分区设计" class="headerlink" title="分区设计"></a>分区设计</h2><ol><li><p>一个表最多只能有1024个分区。</p></li><li><p>如果分区字段中有主键或者唯一索引的列，那么所有主键列和唯一索引列都必须包含进来。</p></li><li><p>分区表无法使用外键约束。</p></li><li><p>NULL值会使分区过滤无效。</p></li><li><p>所有分区必须使用相同的存储引擎。</p><blockquote><p>Rang分区<br>List分区<br>Hash分区<br>Key分区</p></blockquote></li></ol><h2 id="编写注意"><a href="#编写注意" class="headerlink" title="编写注意"></a>编写注意</h2><ol><li><p>使用limit对查询结果的记录进行限定。</p></li><li><p>避免select *，将需要查找的字段列出来。</p></li><li><p>使用连接（join）来代替子查询。</p></li><li><p>拆分大的delete或insert语句。</p></li><li><p>可通过开启慢查询日志来找出较慢的SQL。</p></li><li><p>不做列运算：SELECT id WHERE age + 1 = 10，任何对列的操作都将导致表扫描，它包括数据库教程函数、计算表达式等等，查询时要尽可能将操作移至等号右边。</p></li><li><p>sql语句尽可能简单：一条sql只能在一个cpu运算；大语句拆小语句，减少锁时间；一条大sql可以堵死整个库。</p></li><li><p>OR改写成IN：OR的效率是n级别，IN的效率是log(n)级别，in的个数建议控制在200以内。</p></li><li><p>IN 和 NOT IN 也要慎用，否则会导致全表扫描。对于连续的数值，能用 BETWEEN 就不要用 IN：select id from t where num between 1 and 3。</p></li><li><p>不用函数和触发器，在应用程序实现。</p></li><li><p>避免%xxx式查询。</p></li><li><p>少用JOIN。</p></li><li><p>使用同类型进行比较，比如用’123’和’123’比，123和123比。</p></li><li><p>尽量避免在WHERE子句中使用!=或&lt;&gt;操作符，否则将引擎放弃使用索引而进行全表扫描。</p></li><li><p>对于连续数值，使用BETWEEN不用IN：SELECT id FROM t WHERE num BETWEEN 1 AND 5。</p></li><li><p>列表数据不要拿全表，要使用LIMIT来分页，每页数量也不要太大。</p></li></ol>]]></content>
    
    
    <summary type="html">Mysql</summary>
    
    
    
    <category term="SQL" scheme="https://junonin.github.io/categories/SQL/"/>
    
    <category term="Mysql" scheme="https://junonin.github.io/categories/SQL/Mysql/"/>
    
    
    <category term="Mysql" scheme="https://junonin.github.io/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>Map</title>
    <link href="https://junonin.github.io/posts/93adaabb.html"/>
    <id>https://junonin.github.io/posts/93adaabb.html</id>
    <published>2021-01-16T09:34:06.000Z</published>
    <updated>2021-01-16T09:40:57.210Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Java Map学习记录</p></blockquote>]]></content>
    
    
    <summary type="html">Java Map</summary>
    
    
    
    <category term="JAVA" scheme="https://junonin.github.io/categories/JAVA/"/>
    
    <category term="Map" scheme="https://junonin.github.io/categories/JAVA/Map/"/>
    
    
    <category term="Map" scheme="https://junonin.github.io/tags/Map/"/>
    
  </entry>
  
  <entry>
    <title>Collection</title>
    <link href="https://junonin.github.io/posts/fc4d6532.html"/>
    <id>https://junonin.github.io/posts/fc4d6532.html</id>
    <published>2021-01-16T09:33:58.000Z</published>
    <updated>2021-02-04T01:32:08.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Java Collection学习记录</p></blockquote><h3 id="Java对数组进行倒序排序"><a href="#Java对数组进行倒序排序" class="headerlink" title="Java对数组进行倒序排序"></a>Java对数组进行倒序排序</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 注意，要想改变默认的排列顺序，不能使用基本类型（int,double, char）</span></span><br><span class="line">        <span class="comment">// 而要使用它们对应的包装类</span></span><br><span class="line">        Integer[] a = &#123; <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">6</span>, <span class="number">5</span> &#125;;</span><br><span class="line">        <span class="comment">// 定义一个自定义类MyComparator的对象</span></span><br><span class="line">        Comparator cmp = <span class="keyword">new</span> MyComparator();</span><br><span class="line">        <span class="comment">//Arrays.sort(数组[],比较器);</span></span><br><span class="line">        Arrays.sort(a, cmp);</span><br><span class="line">        <span class="comment">//Collections.reverseOrder()也是一个逆序比较器，倒叙</span></span><br><span class="line">        Arrays.sort(a, Collections.reverseOrder());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> x : a) &#123;</span><br><span class="line">            System.out.print(xw + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Comparator是一个接口比较器</span></span><br><span class="line"><span class="comment">// Comparator中的compare可以将传入进行比对，按照返回的参数大于(1)等于(0)小于(-1)进行排序</span></span><br><span class="line"><span class="comment">// 默认情况下返回1的在后，返回-1的在前</span></span><br><span class="line"><span class="comment">// 如果我们需要逆序，只要把返回值-1和1的换位置即可。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyComparator</span> <span class="keyword">implements</span> <span class="title">Comparator</span>&lt;<span class="title">Integer</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(Integer o1, Integer o2)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 如果o1小于o2，我们就返回正值，如果n1大于n2我们就返回负值，倒叙</span></span><br><span class="line">        <span class="keyword">if</span> (o1 &lt; o2) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (o1 &gt; o2) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Java Collection</summary>
    
    
    
    <category term="JAVA" scheme="https://junonin.github.io/categories/JAVA/"/>
    
    <category term="Collection" scheme="https://junonin.github.io/categories/JAVA/Collection/"/>
    
    
    <category term="Collection" scheme="https://junonin.github.io/tags/Collection/"/>
    
  </entry>
  
  <entry>
    <title>MySQL常用函数</title>
    <link href="https://junonin.github.io/posts/27984876.html"/>
    <id>https://junonin.github.io/posts/27984876.html</id>
    <published>2021-01-15T03:42:40.000Z</published>
    <updated>2021-02-05T08:28:53.004Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>MySQL常用函数</p></blockquote><h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><table><thead><tr><th>函数名称</th><th>作 用</th></tr></thead><tbody><tr><td>ABS(x)</td><td>返回x的绝对值</td></tr><tr><td>sqrt(x)</td><td>求二次方根</td></tr><tr><td>mod(x,y)</td><td>求 x/y 余数</td></tr><tr><td>ceil(x) / ceiling(x)</td><td>两个函数功能相同，都是返回不小于参数的最小整数，即向上取整</td></tr><tr><td>floor(x)</td><td>向下取整，返回值转化为一个BIGINT</td></tr><tr><td>rand(x)</td><td>生成一个0~1之间的随机数，传入整数参数是，用来产生重复序列</td></tr><tr><td>round(x)</td><td>对所传参数进行四舍五入</td></tr><tr><td>sign(x)</td><td>返回参数的符号</td></tr><tr><td>pow(x) / power(x)</td><td>两个函数的功能相同，都是所传参数的次方的结果值</td></tr><tr><td>sin(x)</td><td>求正弦值</td></tr><tr><td>asin(x)</td><td>求反正弦值，与函数 SIN 互为反函数</td></tr><tr><td>cos(x)</td><td>求余弦值</td></tr><tr><td>acos(x)</td><td>求反余弦值，与函数 COS 互为反函数</td></tr><tr><td>atan(x)</td><td>求反正切值，与函数 TAN 互为反函数</td></tr><tr><td>cot(x)</td><td>求余切值</td></tr><tr><td>truncate(x,y)</td><td>返回数字x截短为y位小数的结果</td></tr><tr><td>log(x,y)</td><td>返回x的以y为底的对数</td></tr></tbody></table><h2 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h2><table><thead><tr><th>函数名称</th><th>作 用</th></tr></thead><tbody><tr><td>AVG(X)</td><td>返回指定列的平均值</td></tr><tr><td>COUNT(X)</td><td>返回指定列中非NULL值的个数</td></tr><tr><td>MIN(X)</td><td>返回指定列的最小值</td></tr><tr><td>MAX(X)</td><td>返回指定列的最大值</td></tr><tr><td>SUM(X)</td><td>返回指定列的所有值之和</td></tr><tr><td>GROUP_CONCAT(X)</td><td>返回由属于一组的列值连接组合而成的结果，非常有用</td></tr></tbody></table><h2 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h2><table><thead><tr><th>函数名称</th><th>作 用</th></tr></thead><tbody><tr><td>ASCII(char)</td><td>返回字符的ASCII码值</td></tr><tr><td>BIT_LENGTH(str)</td><td>返回字符串的比特长度</td></tr><tr><td>CONCAT(s1,s2…,sn)</td><td>将s1,s2…,sn连接成字符串</td></tr><tr><td>CONCAT_WS(sep,s1,s2…,sn)</td><td>将s1,s2…,sn连接成字符串，并用sep字符间隔</td></tr><tr><td>INSERT(str,x,y,instr)</td><td>将字符串str从第x位置开始，y个字符长的子串替换为字符串instr，返回结果</td></tr><tr><td>FIND_IN_SET(str,list)</td><td>分析逗号分隔的list列表，如果发现str，返回str在list中的位置</td></tr><tr><td>LCASE(str)或LOWER(str)</td><td>返回将字符串str中所有字符改变为小写后的结果</td></tr><tr><td>LEFT(str,x)</td><td>返回字符串str中最左边的x个字符</td></tr><tr><td>LENGTH(s)</td><td>返回字符串str中的字符数</td></tr><tr><td>LTRIM(str)</td><td>从字符串str中切掉开头的空格</td></tr><tr><td>POSITION(substr,str)</td><td>返回子串substr在字符串str中第一次出现的位置</td></tr><tr><td>QUOTE(str)</td><td>用反斜杠转义str中的单引号</td></tr><tr><td>REPEAT(str,srchstr,rplcstr)</td><td>返回字符串str重复x次的结果</td></tr><tr><td>REVERSE(str)</td><td>返回颠倒字符串str的结果</td></tr><tr><td>RIGHT(str,x)</td><td>返回字符串str中最右边的x个字符</td></tr><tr><td>RTRIM(str)</td><td>返回字符串str尾部的空格</td></tr><tr><td>STRCMP(s1,s2)</td><td><em>比较字符串s1和s2</em></td></tr><tr><td>TRIM(str)</td><td>去除字符串首部和尾部的所有空格</td></tr><tr><td>UCASE(str)或UPPER(str)</td><td>返回将字符串str中所有字符转变为大写后的结果</td></tr></tbody></table><h2 id="日期和时间函数"><a href="#日期和时间函数" class="headerlink" title="日期和时间函数"></a>日期和时间函数</h2><table><thead><tr><th>函数名称</th><th>作 用</th></tr></thead><tbody><tr><td>CURDATE()或CURRENT_DATE()</td><td>返回当前的日期</td></tr><tr><td>CURTIME()或CURRENT_TIME()</td><td>返回当前的时间</td></tr><tr><td>DATE_ADD(date,INTERVAL int keyword)</td><td>返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化)               SELECT DATE_ADD(CURRENT_DATE,INTERVAL 6 MONTH);</td></tr><tr><td>DATE_FORMAT(date,fmt)</td><td>依照指定的fmt格式格式化日期date值</td></tr><tr><td>DATE_SUB(date,INTERVAL int keyword)</td><td>返回日期date加上间隔时间int的结果(int必须按照关键字进行格式化)            SELECT DATE_SUB(CURRENT_DATE,INTERVAL 6 MONTH);</td></tr><tr><td>DAYOFWEEK(date)</td><td>返回date所代表的一星期中的第几天(1~7)</td></tr><tr><td>DAYOFMONTH(date)</td><td>返回date是一个月的第几天(1~31)</td></tr><tr><td>DAYOFYEAR(date)</td><td>返回date是一年的第几天(1~366)</td></tr><tr><td>DAYNAME(date)</td><td>返回date的星期名，如：SELECT DAYNAME(CURRENT_DATE);</td></tr><tr><td>FROM_UNIXTIME(ts,fmt)</td><td>根据指定的fmt格式，格式化UNIX时间戳ts</td></tr><tr><td>HOUR(time)</td><td>返回time的小时值(0~23)</td></tr><tr><td>MINUTE(time)</td><td>返回time的分钟值(0~59)</td></tr><tr><td>MONTH(date)</td><td>返回date的月份值(1~12)</td></tr><tr><td>MONTHNAME(date)</td><td>返回date的月份名，如：SELECT MONTHNAME(CURRENT_DATE);</td></tr><tr><td>NOW()</td><td>返回当前的日期和时间</td></tr><tr><td>QUARTER(date)</td><td>返回date在一年中的季度(1~4)       SELECT QUARTER(CURRENT_DATE);</td></tr><tr><td>WEEK(date)</td><td>返回日期date为一年中第几周(0~53)</td></tr><tr><td>YEAR(date)</td><td>返回日期date的年份(1000~9999)</td></tr></tbody></table><h2 id="加密函数"><a href="#加密函数" class="headerlink" title="加密函数"></a>加密函数</h2><table><thead><tr><th>函数名称</th><th>作 用</th></tr></thead><tbody><tr><td>AES_ENCRYPT(str,key)</td><td>返回用密钥key对字符串str利用高级加密标准算法加密后的结果，调用AES_ENCRYPT的结果是一个二进制字符串，以BLOB类型存储</td></tr><tr><td>AES_DECRYPT(str,key)</td><td>返回用密钥key对字符串str利用高级加密标准算法解密后的结果</td></tr><tr><td>DECODE(str,key)</td><td>使用key作为密钥解密加密字符串str</td></tr><tr><td>ENCRYPT(str,salt)</td><td>使用UNIXcrypt()函数，用关键词salt(一个可以惟一确定口令的字符串，就像钥匙一样)加密字符串str</td></tr><tr><td>ENCODE(str,key)</td><td>使用key作为密钥加密字符串str，调用ENCODE()的结果是一个二进制字符串，它以BLOB类型存储</td></tr><tr><td>MD5()</td><td>计算字符串str的MD5校验和</td></tr><tr><td>PASSWORD(str)</td><td>返回字符串str的加密版本，这个加密过程是不可逆转的，和UNIX密码加密过程使用不同的算法。</td></tr><tr><td>SHA()</td><td>计算字符串str的安全散列算法(SHA)校验和</td></tr></tbody></table><h2 id="控制流函数"><a href="#控制流函数" class="headerlink" title="控制流函数"></a>控制流函数</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">CASE WHEN [test1] THEN [result1]...ELSE [default] <span class="keyword">END</span>                     </span><br><span class="line"><span class="comment">--如果test1是真，则返回result1，否则返回default</span></span><br><span class="line"><span class="keyword">CASE</span> [<span class="keyword">test</span>] <span class="keyword">WHEN</span> [val1] <span class="keyword">THEN</span> [<span class="keyword">result</span>]...ELSE [<span class="keyword">default</span>] <span class="keyword">END</span>                      </span><br><span class="line"><span class="comment">--如果test和valN相等，则返回result，否则返回default</span></span><br><span class="line"><span class="keyword">IF</span>(<span class="keyword">test</span>,t,f)        </span><br><span class="line"><span class="comment">--如果test是真，返回t；否则返回f</span></span><br><span class="line"><span class="keyword">IFNULL</span>(arg1,arg2)   </span><br><span class="line"><span class="comment">--如果arg1不是空，返回arg1，否则返回arg2</span></span><br><span class="line"><span class="keyword">NULLIF</span>(arg1,arg2)   </span><br><span class="line"><span class="comment">--如果arg1=arg2返回NULL；否则返回arg1</span></span><br><span class="line"></span><br><span class="line">这些函数的第一个是<span class="keyword">IFNULL</span>()，它有两个参数，并且对第一个参数进行判断。</span><br><span class="line">如果第一个参数不是<span class="literal">NULL</span>，函数就会向调用者返回第一个参数；</span><br><span class="line">如果是<span class="literal">NULL</span>,将返回第二个参数。例如</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(<span class="number">1</span>,<span class="number">2</span>), </span><br><span class="line"><span class="keyword">IFNULL</span>(<span class="literal">NULL</span>,<span class="number">10</span>),</span><br><span class="line"><span class="keyword">IFNULL</span>(<span class="number">4</span>*<span class="literal">NULL</span>,<span class="string">&#x27;false&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NULLIF()函数将会检验提供的两个参数是否相等，如果相等，则返回NULL，</span><br><span class="line">如果不相等，就返回第一个参数。例如</span><br><span class="line"><span class="keyword">SELECT</span>  <span class="keyword">NULLIF</span>(<span class="number">1</span>,<span class="number">1</span>), </span><br><span class="line"><span class="keyword">NULLIF</span>(<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>), </span><br><span class="line"><span class="keyword">NULLIF</span>(<span class="number">2</span>+<span class="number">3</span>,<span class="number">4</span>+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MySQL的IF()函数也可以建立一个简单的条件测试，</span><br><span class="line">这个函数有三个参数，第一个是要被判断的表达式，</span><br><span class="line">如果表达式为真，IF()将会返回第二个参数，</span><br><span class="line">如果为假，IF()将会返回第三个参数。</span><br><span class="line">例如</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IF</span>(<span class="number">1</span>&lt;<span class="number">10</span>,<span class="number">2</span>,<span class="number">3</span>),<span class="keyword">IF</span>(<span class="number">56</span>&gt;<span class="number">100</span>,<span class="string">&#x27;true&#x27;</span>,<span class="string">&#x27;false&#x27;</span>);</span><br><span class="line">IF()函数在只有两种可能结果时才适合使用。</span><br><span class="line">然而，在现实世界中，我们可能发现在条件测试中会需要多个分支。</span><br><span class="line">在这种情况下，它和PHP及Perl语言的switch-case条件例程一样。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CASE函数的格式有些复杂，通常如下所示：</span><br><span class="line">CASE [expression to be evaluated]</span><br><span class="line">WHEN [val 1] THEN [result 1]</span><br><span class="line">WHEN [val 2] THEN [result 2]</span><br><span class="line">WHEN [val 3] THEN [result 3]</span><br><span class="line">......</span><br><span class="line">WHEN [val n] THEN [result n]</span><br><span class="line">ELSE [default result]</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">这里，第一个参数是要被判断的值或表达式，接下来的是一系列的<span class="keyword">WHEN</span>-<span class="keyword">THEN</span>块，</span><br><span class="line">每一块的第一个参数指定要比较的值，如果为真，就返回结果。</span><br><span class="line">所有的<span class="keyword">WHEN</span>-<span class="keyword">THEN</span>块将以<span class="keyword">ELSE</span>块结束，当<span class="keyword">END</span>结束了所有外部的<span class="keyword">CASE</span>块时，</span><br><span class="line">如果前面的每一个块都不匹配就会返回<span class="keyword">ELSE</span>块指定的默认结果。</span><br><span class="line">如果没有指定<span class="keyword">ELSE</span>块，而且所有的<span class="keyword">WHEN</span>-<span class="keyword">THEN</span>比较都不是真，MySQL将会返回<span class="literal">NULL</span>。</span><br><span class="line"><span class="keyword">CASE</span>函数还有另外一种句法，有时使用起来非常方便，如下：</span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line"><span class="keyword">WHEN</span> [conditional <span class="keyword">test</span> <span class="number">1</span>] <span class="keyword">THEN</span> [<span class="keyword">result</span> <span class="number">1</span>]</span><br><span class="line"><span class="keyword">WHEN</span> [conditional <span class="keyword">test</span> <span class="number">2</span>] <span class="keyword">THEN</span> [<span class="keyword">result</span> <span class="number">2</span>]</span><br><span class="line"><span class="keyword">ELSE</span> [<span class="keyword">default</span> <span class="keyword">result</span>]</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line">这种条件下，返回的结果取决于相应的条件测试是否为真。例如：</span><br><span class="line"><span class="keyword">SELECT</span>  <span class="keyword">CASE</span> <span class="string">&#x27;green&#x27;</span>      </span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">&#x27;red&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;stop&#x27;</span>      </span><br><span class="line"><span class="keyword">WHEN</span> <span class="string">&#x27;green&#x27;</span> <span class="keyword">THEN</span> <span class="string">&#x27;go&#x27;</span> <span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span>  <span class="number">9</span> </span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;a&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> <span class="string">&#x27;b&#x27;</span> <span class="keyword">ELSE</span> <span class="string">&#x27;N/A&#x27;</span> <span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="keyword">WHEN</span> (<span class="number">2</span>+<span class="number">2</span>)=<span class="number">4</span> <span class="keyword">THEN</span> <span class="string">&#x27;OK&#x27;</span> </span><br><span class="line"><span class="keyword">WHEN</span> (<span class="number">2</span>+<span class="number">2</span>)&lt;&gt;<span class="number">4</span> <span class="keyword">THEN</span> <span class="string">&#x27;not OK&#x27;</span> <span class="keyword">END</span> <span class="keyword">AS</span> <span class="keyword">STATUS</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Name</span>,<span class="keyword">IF</span>((IsActive = <span class="number">1</span>),<span class="string">&#x27;已激活&#x27;</span>,<span class="string">&#x27;未激活&#x27;</span>) <span class="keyword">AS</span> <span class="keyword">RESULT</span> </span><br><span class="line"><span class="keyword">FROM</span> UserLoginInfo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> fname,lname,(math+sci+lit) <span class="keyword">AS</span> total,</span><br><span class="line"><span class="keyword">CASE</span> <span class="keyword">WHEN</span> (math+sci+lit) &lt; <span class="number">50</span> <span class="keyword">THEN</span> <span class="string">&#x27;D&#x27;</span>     </span><br><span class="line"><span class="keyword">WHEN</span> (math+sci+lit) <span class="keyword">BETWEEN</span> <span class="number">50</span> <span class="keyword">AND</span> <span class="number">150</span> <span class="keyword">THEN</span> <span class="string">&#x27;C&#x27;</span>     </span><br><span class="line"><span class="keyword">WHEN</span> (math+sci+lit) <span class="keyword">BETWEEN</span> <span class="number">151</span> <span class="keyword">AND</span> <span class="number">250</span> <span class="keyword">THEN</span> <span class="string">&#x27;B&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27;A&#x27;</span> <span class="keyword">END</span> <span class="keyword">AS</span> grade <span class="keyword">FROM</span> marks ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IF</span>(<span class="keyword">ENCRYPT</span>(<span class="string">&#x27;sue&#x27;</span>,<span class="string">&#x27;ts&#x27;</span>)=upass,<span class="string">&#x27;allow&#x27;</span>,<span class="string">&#x27;deny&#x27;</span>) <span class="keyword">AS</span> LoginResult</span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> uname = <span class="string">&#x27;sue&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="格式化函数"><a href="#格式化函数" class="headerlink" title="格式化函数"></a>格式化函数</h2><table><thead><tr><th>函数名称</th><th></th></tr></thead><tbody><tr><td>DATE_FORMAT(date,fmt)</td><td>依照字符串fmt格式化日期date值</td></tr><tr><td>FORMAT(x,y)</td><td>把x格式化为以逗号隔开的数字序列，y是结果的小数位数</td></tr><tr><td>INET_ATON(ip)</td><td>返回IP地址的数字表示</td></tr><tr><td>INET_NTOA(num)</td><td>返回数字所代表的IP地址</td></tr><tr><td>TIME_FORMAT(time,fmt)</td><td>依照字符串fmt格式化时间time值</td></tr></tbody></table><blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">FORMAT</span>(<span class="number">34234.34323432</span>,<span class="number">3</span>) ;<span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(),<span class="string">&#x27;%W,%D %M %Y %r&#x27;</span>) ;<span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(),<span class="string">&#x27;%Y-%m-%d&#x27;</span>) ;<span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="number">19990330</span>,<span class="string">&#x27;%Y-%m-%d&#x27;</span>) ;<span class="keyword">SELECT</span> <span class="keyword">DATE_FORMAT</span>(<span class="keyword">NOW</span>(),<span class="string">&#x27;%h:%i %p&#x27;</span>) ;<span class="keyword">SELECT</span> <span class="keyword">INET_ATON</span>(<span class="string">&#x27;10.122.89.47&#x27;</span>) ;<span class="keyword">SELECT</span> <span class="keyword">INET_NTOA</span>(<span class="number">175790383</span>) ;</span><br></pre></td></tr></table></figure></blockquote><h2 id="类型转化函数"><a href="#类型转化函数" class="headerlink" title="类型转化函数"></a>类型转化函数</h2><blockquote><p>为了进行数据类型转化，MySQL提供了CAST()函数，它可以把一个值转化为指定的数据类型。类型有：BINARY,CHAR,DATE,TIME,DATETIME,SIGNED,UNSIGNED</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CAST</span>(<span class="keyword">NOW</span>() <span class="keyword">AS</span> SIGNED <span class="built_in">INTEGER</span>),<span class="keyword">CURDATE</span>()+<span class="number">0</span>;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;f&#x27;</span>=<span class="built_in">BINARY</span> <span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;f&#x27;</span>=<span class="keyword">CAST</span>(<span class="string">&#x27;F&#x27;</span> <span class="keyword">AS</span> <span class="built_in">BINARY</span>);</span><br></pre></td></tr></table></figure></blockquote><h2 id="系统信息函数"><a href="#系统信息函数" class="headerlink" title="系统信息函数"></a>系统信息函数</h2><table><thead><tr><th>函数名称</th><th>作 用</th></tr></thead><tbody><tr><td>DATABASE()</td><td>返回当前数据库名</td></tr><tr><td>BENCHMARK(count,expr)</td><td>将表达式expr重复运行count次</td></tr><tr><td>CONNECTION_ID()</td><td>返回当前客户的连接ID</td></tr><tr><td>FOUND_ROWS()</td><td>返回最后一个SELECT查询进行检索的总行数</td></tr><tr><td>USER()或SYSTEM_USER()</td><td>返回当前登陆用户名</td></tr><tr><td>VERSION()</td><td>返回MySQL服务器的版本</td></tr><tr><td></td><td>SELECT DATABASE(),VERSION(),USER();</td></tr><tr><td></td><td>SELECTBENCHMARK(9999999,LOG(RAND()*PI()));</td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="开窗函数"><a href="#开窗函数" class="headerlink" title="开窗函数"></a>开窗函数</h2><blockquote><p>MySQL8.0版本开始支持开窗函数</p></blockquote><table><thead><tr><th>函数名称</th><th>作 用</th></tr></thead><tbody><tr><td>ROW_NUMBER() OVER()</td><td>排序：1,2,3,4</td></tr><tr><td>RANK() OVER()</td><td>排序：1,1,3,3,5</td></tr><tr><td>DENSE_RANK() OVER()</td><td>排序：1,1,2,2,3,4</td></tr><tr><td>NTILE() OVER()</td><td>将有序数据分为N组，记录等级数</td></tr><tr><td>LAG(expr,n) OVER()</td><td>返回当前行的前N行的expr的值</td></tr><tr><td>LEAD(expr,n) OVER()</td><td>返回当前行 后N行的expr的值</td></tr></tbody></table>]]></content>
    
    
    <summary type="html">MySQL常用函数</summary>
    
    
    
    <category term="SQL" scheme="https://junonin.github.io/categories/SQL/"/>
    
    <category term="Mysql" scheme="https://junonin.github.io/categories/SQL/Mysql/"/>
    
    
    <category term="SQL" scheme="https://junonin.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Spring常用注解</title>
    <link href="https://junonin.github.io/posts/85ef0b3a.html"/>
    <id>https://junonin.github.io/posts/85ef0b3a.html</id>
    <published>2021-01-14T03:30:49.000Z</published>
    <updated>2021-01-30T09:50:39.517Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Spring常用注解</p></blockquote><h2 id="Annotation"><a href="#Annotation" class="headerlink" title="Annotation"></a>Annotation</h2><h3 id="Controller"><a href="#Controller" class="headerlink" title="@Controller"></a>@Controller</h3><p>标识一个该类是Spring MVC controller处理器</p><h3 id="RestController"><a href="#RestController" class="headerlink" title="@RestController"></a>@RestController</h3><p>Spring4之后加入的注解，原来在<code>@Controller</code>中返回json需要<code>@ResponseBody</code>来配合，如果直接用<code>@RestController</code>替代<code>@Controller</code>就不需要再配置<code>@ResponseBody</code>，默认返回json格式。</p><h3 id="ResponseBody"><a href="#ResponseBody" class="headerlink" title="@ResponseBody"></a>@ResponseBody</h3><p>将<code>controller</code>的方法返回的对象通过适当的转换器转换为指定的格式之后，写入到response对象的body区，通常用来返回JSON数据或者是XML数据。</p><h3 id="Service"><a href="#Service" class="headerlink" title="@Service"></a>@Service</h3><p>标注业务层组件，用注解的方式把这个类注入到spring配置中</p><h3 id="Autowired"><a href="#Autowired" class="headerlink" title="@Autowired"></a>@Autowired</h3><p>用来装配bean，都可以写在字段上，或者方法上。<br>默认情况下必须要求依赖对象必须存在，如果要允许null值，可以设置它的required属性为false，例如：@Autowired(required=false)</p><h3 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h3><p>类定义处: 提供初步的请求映射信息，相对于 WEB 应用的根目录。<br>方法处: 提供进一步的细分映射信息，相对于类定义处的 URL。</p><h3 id="RequestParam"><a href="#RequestParam" class="headerlink" title="@RequestParam"></a>@RequestParam</h3><p>将请求参数区数据映射到功能处理方法的参数上，例如<code>@RequestParam(value = &quot;xxx&quot;)</code></p><h3 id="ModelAttribute"><a href="#ModelAttribute" class="headerlink" title="@ModelAttribute"></a>@ModelAttribute</h3><p><code>@ModelAttribute</code>注解，实际上是一种接受参数并且自动放入Model对象中</p><ol><li>标记在方法上，会在每一个<code>@RequestMapping</code>标注的方法前执行，如果有返回值，则自动将该返回值加入到<code>ModelMap</code>中。</li><li>标记在方法的参数上，会将客户端传递过来的参数按名称注入到指定对象中，并且会将这个对象自动加入<code>ModelMap</code>中，便于View层使用。</li></ol><h3 id="PostConstruct"><a href="#PostConstruct" class="headerlink" title="@PostConstruct"></a>@PostConstruct</h3><p>标记是在项目启动的时候执行这个方法。用来修饰一个<code>非静态的void()方法</code>。<br>spring容器启动时就执行，多用于一些全局配置、数据字典之类的加载。<br>被<code>@PostConstruct</code>修饰的方法会在服务器加载Servlet的时候运行，并且只会被服务器执行一次。<code>@PostConstruct</code>在构造函数之后执行,<code>init()</code>方法之前执行。<code>PreDestroy()</code>方法在<code>destroy()</code>方法执行执行之后执。</p><h3 id="PreDestroy"><a href="#PreDestroy" class="headerlink" title="@PreDestroy"></a>@PreDestroy</h3><p>xx</p><h3 id="Repository"><a href="#Repository" class="headerlink" title="@Repository"></a>@Repository</h3><p>用于标注数据访问组件，即DAO组件。</p><h3 id="Component"><a href="#Component" class="headerlink" title="@Component"></a>@Component</h3><p>泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注，普通bean注入，实例不唯一。</p><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="@Configuration"></a>@Configuration</h3><p>标记的方法会被包装成CGLIB的wrapper其工作原理是:如果方式是首次被调用那么原始的方法体会被执行并且结果对象会被注册到Spring上下文中，每次调用会在Spring上下文获取对象实例，常用于配置类。</p><h3 id="Scope"><a href="#Scope" class="headerlink" title="@Scope"></a>@Scope</h3><p>…</p><h3 id="SessionAttributes"><a href="#SessionAttributes" class="headerlink" title="@SessionAttributes"></a>@SessionAttributes</h3><p>…</p><h3 id="Required"><a href="#Required" class="headerlink" title="@Required"></a>@Required</h3><p>适用于bean属性setter方法，并表示受影响的<code>bean</code>属性必须在XML配置文件在配置时进行填充。否则，容器会抛出一个<code>BeanInitializationException异常</code>。</p><h3 id="Qualifier"><a href="#Qualifier" class="headerlink" title="@Qualifier"></a>@Qualifier</h3><p>当你创建多个具有相同类型的 <code>bean</code> 时，并且想要用一个属性只为它们其中的一个进行装配，在这种情况下，你可以使用<code>@Qualifier</code>注释和<code>@Autowired</code>注释通过指定哪一个真正的 bean 将会被装配来消除混乱。</p><h3 id="Resource"><a href="#Resource" class="headerlink" title="@Resource"></a>@Resource</h3><p>…</p>]]></content>
    
    
    <summary type="html">Spring常用注解</summary>
    
    
    
    <category term="JAVA" scheme="https://junonin.github.io/categories/JAVA/"/>
    
    <category term="Spring" scheme="https://junonin.github.io/categories/JAVA/Spring/"/>
    
    
    <category term="Spring" scheme="https://junonin.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Maven</title>
    <link href="https://junonin.github.io/posts/c6e613d8.html"/>
    <id>https://junonin.github.io/posts/c6e613d8.html</id>
    <published>2021-01-06T10:50:12.000Z</published>
    <updated>2021-02-04T07:47:59.939Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>maven使用记录，方便日后使用</p></blockquote><h2 id="maven全面解析"><a href="#maven全面解析" class="headerlink" title="maven全面解析"></a>maven全面解析</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0http://maven.apache.org/maven-v4_0_0.xsd&quot;</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">parent</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--被继承的父项目的构件标识符--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--被继承的父项目的全球唯一标识符--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--被继承的父项目的版本--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">parent</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--项目的全球唯一标识符，通常使用全限定的包名区分该项目和其他项目。并且构建时生成的路径也是由此生成， 如com.mycompany.app生成的相对路径为：/com/mycompany/app--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.missbe.web<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；在某个 </span></span><br><span class="line"><span class="comment">  特定的group ID下，artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源码，二进制发布和WARs等。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>search-resources<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--项目当前版本，格式为:主版本.次版本.增量版本-限定版本号--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--项目的名称, Maven产生的文档用--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>search-resources<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--项目主页的URL, Maven产生的文档用--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.missbe.cn<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!-- 项目的详细描述, Maven 产生的文档用。  当这个元素能够用HTML格式描述时（例如，CDATA中的文本会被解析器忽略，就可以包含HTML标 签）， 不鼓励使用纯文本描述。如果你需要修改产生的web站点的索引页面，你应该修改你自己的索引页文件，而不是调整这里的文档。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>A maven project to study maven.<span class="tag">&lt;/<span class="name">description</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--描述了这个项目构建环境中的前提条件。--&gt;</span>  </span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">prerequisites</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--构建该项目或使用该插件所需要的Maven的最低版本--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">maven</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">prerequisites</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--构建项目需要的信息--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">build</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--该元素设置了项目源码目录，当构建项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">sourceDirectory</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--该元素设置了项目脚本源码目录，该目录和源码目录不同：绝大多数情况下，该目录下的内容 会被拷贝到输出目录(因为脚本是被解释的，而不是被编译的)。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">scriptSourceDirectory</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--该元素设置了项目单元测试使用的源码目录，当测试项目的时候，构建系统会编译目录里的源码。该路径是相对于pom.xml的相对路径。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">testSourceDirectory</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--被编译过的应用程序class文件存放的目录。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">outputDirectory</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--被编译过的测试class文件存放的目录。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">testOutputDirectory</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--使用来自该项目的一系列构建扩展--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">extensions</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!--描述使用到的构建扩展。--&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">extension</span>&gt;</span> </span><br><span class="line">            <span class="comment">&lt;!--构建扩展的groupId--&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!--构建扩展的artifactId--&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!--构建扩展的版本--&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>/&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">extension</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">extensions</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--这个元素描述了项目相关的所有资源路径列表，例如和项目相关的属性文件，这些资源被包含在最终的打包文件里。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--这个元素描述了项目相关或测试相关的所有资源路径--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">resource</span>&gt;</span> </span><br><span class="line">          <span class="comment">&lt;!-- 描述了资源的目标路径。该路径相对target/classes目录（例如$&#123;project.build.outputDirectory&#125;）。举个例 子，如果你想资源在特定的包里(org.apache.maven.messages)，你就必须该元素设置为org/apache/maven /messages。然而，如果你只是想把资源放到源码目录结构里，就不需要该配置。--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--是否使用参数值代替参数名。参数值取自properties元素或者文件里配置的属性，文件在filters元素里列出。--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">filtering</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--描述存放资源的目录，该路径相对POM路径--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">directory</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--包含的模式列表，例如**/*.xml.--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">includes</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--排除的模式列表，例如**/*.xml--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">resource</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--这个元素描述了单元测试相关的所有资源路径，例如和单元测试相关的属性文件。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">testResources</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!--这个元素描述了测试相关的所有资源路径，参见build/resources/resource元素的说明--&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">testResource</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">targetPath</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">filtering</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">excludes</span>/&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">testResource</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">testResources</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--构建产生的所有文件存放的目录--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--产生的构件的文件名，默认值是$&#123;artifactId&#125;-$&#123;version&#125;。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">finalName</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--当filtering开关打开时，使用到的过滤器属性文件列表--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">filters</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--子项目可以引用的默认插件信息。该插件配置项直到被引用时才会被解析或绑定到生命周期。给定插件的任何本地配置都会覆盖这里的配置--&gt;</span>  </span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--使用的插件列表 。--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">plugins</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!--plugin元素包含描述插件所需要的信息。--&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"></span><br><span class="line">          <span class="comment">&lt;!--插件在仓库里的group ID--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--插件在仓库里的artifact ID--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--被使用的插件的版本（或版本范围）--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--是否从该插件下载Maven扩展（例如打包和类型处理器），由于性能原因，只有在真需要下载时，该元素才被设置成enabled。--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--在构建生命周期中执行一组目标的配置。每个目标可能有不同的配置。--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">executions</span>&gt;</span> </span><br><span class="line">            <span class="comment">&lt;!--execution元素包含了插件执行需要的信息--&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">execution</span>&gt;</span> </span><br><span class="line">                <span class="comment">&lt;!--执行目标的标识符，用于标识构建过程中的目标，或者匹配继承过程中需要合并的执行目标--&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span>/&gt;</span>  </span><br><span class="line">                <span class="comment">&lt;!--绑定了目标的构建生命周期阶段，如果省略，目标会被绑定到源数据里配置的默认阶段--&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">phase</span>/&gt;</span>  </span><br><span class="line">                <span class="comment">&lt;!--配置的执行目标--&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">goals</span>/&gt;</span>  </span><br><span class="line">                <span class="comment">&lt;!--配置是否被传播到子POM--&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>  </span><br><span class="line">                <span class="comment">&lt;!--作为DOM对象的配置--&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span> </span><br><span class="line">            <span class="tag">&lt;/<span class="name">execution</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">          <span class="comment">&lt;!--项目引入插件所需要的额外依赖--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">            <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>......<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">          <span class="comment">&lt;!--任何配置是否被传播到子项目--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span>  </span><br><span class="line">          <span class="comment">&lt;!--作为DOM对象的配置--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span> </span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--使用的插件列表--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--参见build/pluginManagement/plugins/plugin元素--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">plugin</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">extensions</span>/&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">executions</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">execution</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">phase</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">goals</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span> </span><br><span class="line">          <span class="tag">&lt;/<span class="name">execution</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">executions</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">          <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>......<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">goals</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">inherited</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configuration</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">build</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--模块（有时称作子项目） 被构建成项目的一部分。</span></span><br><span class="line"><span class="comment">列出的每个模块元素是指向该模块的目录的相对路径--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">modules</span>/&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--发现依赖和扩展的远程仓库列表。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">repositories</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--包含需要连接到远程仓库的信息--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--如何处理远程仓库里发布版本的下载--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">releases</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。--&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!--当Maven验证构件校验文件失败时该怎么做：ignore（忽略），fail（失败），或者warn（警告）。--&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- 如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，</span></span><br><span class="line"><span class="comment">POM就可以在每个单独的仓库中，为每种类型的构件采取不同的 策略。</span></span><br><span class="line"><span class="comment">例如，可能有人会决定只为开发目的开启对快照版本下载的支持。</span></span><br><span class="line"><span class="comment">参见repositories/repository/releases元素 --&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">updatePolicy</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">checksumPolicy</span>/&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--远程仓库唯一标识符。可以用来匹配在settings.xml文件里配置的远程仓库--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-repository-proxy<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--远程仓库名称--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon-repository-proxy<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--远程仓库URL，按protocol://hostname/path形式--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://192.168.1.169:9999/repository/<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- 用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然 而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">repositories</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--发现插件的远程仓库列表，这些插件用于构建和报表--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--包含需要连接到远程插件仓库的信息.参见repositories/repository元素--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span>......<span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span>  </span><br><span class="line">  <span class="comment">&lt;!--该元素描述了项目相关的所有依赖。 这些依赖组成了项目构建过程中的一个个环节。它们自动从项目定义的仓库中下载。要获取更多信息，请看项目依赖机制。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--依赖的group ID--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--依赖的artifact ID--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-artifact<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--依赖的版本号。 在Maven 2里, 也可以配置成版本号的范围。--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- 依赖类型，默认类型是jar。它通常表示依赖的文件的扩展名，但也有例外。一个类型可以被映射成另外一个扩展名或分类器。类型经常和使用的打包方式对应，</span></span><br><span class="line"><span class="comment">      尽管这也有例外。一些类型的例子：jar，war，ejb-client和test-jar。如果设置extensions为 true，就可以在 plugin里定义新的类型。所以前面的类型的例子不完整。--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!-- 依赖的分类器。分类器可以区分属于同一个POM，但不同构建方式的构件。分类器名被附加到文件名的版本号后面。例如，如果你想要构建两个单独的构件成 JAR，</span></span><br><span class="line"><span class="comment">      一个使用Java 1.4编译器，另一个使用Java 6编译器，你就可以使用分类器来生成两个单独的JAR构件。--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">classifier</span>/&gt;</span>  </span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--依赖范围。在项目发布过程中，帮助决定哪些构件被包括进来。欲知详情请参考依赖机制。    </span></span><br><span class="line"><span class="comment">                - compile ：默认范围，用于编译      </span></span><br><span class="line"><span class="comment">                - provided：类似于编译，但支持你期待jdk或者容器提供，类似于classpath      </span></span><br><span class="line"><span class="comment">                - runtime: 在执行时需要使用      </span></span><br><span class="line"><span class="comment">                - test:    用于test任务时使用      </span></span><br><span class="line"><span class="comment">                - system: 需要外在提供相应的元素。通过systemPath来取得      </span></span><br><span class="line"><span class="comment">                - systemPath: 仅用于范围为system。提供相应的路径      </span></span><br><span class="line"><span class="comment">                - optional:   当项目自身被依赖时，标注依赖是否传递。用于连续依赖时使用--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!--仅供system范围使用。注意，不鼓励使用这个元素，并且在新的版本中该元素可能被覆盖掉。该元素为依赖规定了文件系统上的路径。</span></span><br><span class="line"><span class="comment">      需要绝对路径而不是相对路径。推荐使用属性匹配绝对路径，例如$&#123;java.home&#125;。--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">systemPath</span>/&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span> </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--可选依赖，如果你在项目B中把C依赖声明为可选，你就需要在依赖于B的项目（例如项目A）中显式的引用对C的依赖。可选依赖阻断依赖的传递性。--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- 继承自该项目的所有子项目的默认依赖信息。这部分的依赖信息不会被立即解析,而是当子项目声明一个依赖（必须描述group ID和 artifact ID信息），</span></span><br><span class="line"><span class="comment">  如果group ID和artifact ID以外的一些信息没有描述，则通过group ID和artifact ID 匹配到这里的依赖，并使用这里的依赖信息。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--参见dependencies/dependency元素--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>......<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--项目分发信息，在执行mvn deploy后表示要发布的位置。</span></span><br><span class="line"><span class="comment">  有了这些信息就可以把网站部署到远程服务器或者把构件部署到远程仓库。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!--部署项目产生的构件到远程仓库需要的信息--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--是分配给快照一个唯一的版本号（由时间戳和构建流水号）？还是每次都使用相同的版本号？参见repositories/repository元素--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">uniqueVersion</span>/&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-maven2<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>banseon maven2<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>file://$&#123;basedir&#125;/target/deploy<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">repository</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--构件的快照部署到哪里？如果没有配置该元素，默认部署到repository元素配置的仓库，参见distributionManagement/repository元素--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">uniqueVersion</span>/&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-maven2<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>Banseon-maven2 Snapshot Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>scp://svn.baidu.com/banseon:/usr/local/maven-snapshot<span class="tag">&lt;/<span class="name">url</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">layout</span>/&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--部署项目的网站需要的信息--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">site</span>&gt;</span> </span><br><span class="line">      <span class="comment">&lt;!--部署位置的唯一标识符，用来匹配站点和settings.xml文件里的配置--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">id</span>&gt;</span>banseon-site<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--部署位置的名称--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">name</span>&gt;</span>business api website<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">      <span class="comment">&lt;!--部署位置的URL，按protocol://hostname/path形式--&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>scp://svn.baidu.com/banseon:/var/www/localhost/banseon-web<span class="tag">&lt;/<span class="name">url</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;/<span class="name">site</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!--项目下载页面的URL。如果没有该元素，用户应该参考主页。使用该元素的原因是：帮助定位那些不在仓库里的构件（由于license限制）。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">downloadUrl</span>/&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- 给出该构件在远程仓库的状态。不得在本地项目中设置该元素，因为这是工具自动更新的。有效的值有：none（默认），</span></span><br><span class="line"><span class="comment">    converted（仓库管理员从 Maven 1 POM转换过来），partner（直接从伙伴Maven 2仓库同步过来），deployed（从Maven 2实例部 署），verified（被核实时正确的和最终的）。--&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">status</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span>  </span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--以值替代名称，Properties可以在整个POM中使用，也可以作为触发条件（见settings.xml配置文件里activation元素的说明）。格式是&lt;name&gt;value&lt;/name&gt;。--&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;<span class="name">properties</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="maven全局排除-spring-boot-starter-logging-依赖"><a href="#maven全局排除-spring-boot-starter-logging-依赖" class="headerlink" title="maven全局排除 spring-boot-starter-logging 依赖"></a>maven全局排除 spring-boot-starter-logging 依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">&lt;!--全局排除spring-boot-starter-logging内的所有依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>*<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>*<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">maven学习记录,maven推送本地包到私服</summary>
    
    
    
    <category term="JAVA" scheme="https://junonin.github.io/categories/JAVA/"/>
    
    <category term="Maven" scheme="https://junonin.github.io/categories/JAVA/Maven/"/>
    
    
    <category term="Maven" scheme="https://junonin.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>Oracle、Mysql、SqlServer创建表和给表和字段加注释</title>
    <link href="https://junonin.github.io/posts/9770b99d.html"/>
    <id>https://junonin.github.io/posts/9770b99d.html</id>
    <published>2020-12-24T10:47:45.000Z</published>
    <updated>2020-12-25T02:56:24.179Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>记录下表和字段加注释<br>参考：<a href="https://www.cnblogs.com/a735882640/p/9639904.html">Oracle、Mysql、SqlServer创建表和给表和字段加注释</a></p></blockquote><h2 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span> ( </span><br><span class="line">     <span class="keyword">id</span> <span class="built_in">varchar2</span>(<span class="number">200</span>) primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">     <span class="keyword">sort</span> <span class="built_in">number</span>, </span><br><span class="line">     <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">200</span>)</span><br><span class="line">)</span><br><span class="line"><span class="comment">--表加注释</span></span><br><span class="line"><span class="keyword">comment</span> <span class="keyword">on</span> <span class="keyword">table</span> <span class="keyword">test</span> <span class="keyword">is</span> <span class="string">&#x27;测试表&#x27;</span> </span><br><span class="line"><span class="comment">--字段加注释</span></span><br><span class="line"><span class="keyword">comment</span> <span class="keyword">on</span> <span class="keyword">column</span> test.id <span class="keyword">is</span> <span class="string">&#x27;id&#x27;</span>; </span><br><span class="line"><span class="keyword">comment</span> <span class="keyword">on</span> <span class="keyword">column</span> test.sort <span class="keyword">is</span> <span class="string">&#x27;序号&#x27;</span>;</span><br><span class="line"><span class="comment">--查看表字段注释</span></span><br><span class="line"><span class="keyword">select</span> table_name,column_name,comments <span class="keyword">from</span> user_col_comments <span class="keyword">where</span> table_name=<span class="string">&#x27;test&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span> ( </span><br><span class="line">     <span class="keyword">id</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">     <span class="keyword">sort</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">comment</span> <span class="string">&#x27;排序&#x27;</span>,</span><br><span class="line">     <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">comment</span>  <span class="string">&#x27;名称&#x27;</span>,</span><br><span class="line">)           </span><br><span class="line"><span class="comment">--表加注释</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">test</span> <span class="keyword">comment</span> =<span class="string">&#x27;测试表&#x27;</span> </span><br><span class="line"><span class="comment">--字段加注释</span></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> <span class="keyword">test</span> <span class="keyword">modify</span> <span class="keyword">column</span> field_name <span class="built_in">int</span> <span class="keyword">comment</span> <span class="string">&#x27;修改后的字段注释&#x27;</span></span><br><span class="line"><span class="comment">--查看表的注释</span></span><br><span class="line"><span class="keyword">select</span> table_name,table_comment <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema =<span class="string">&#x27;db&#x27;</span> <span class="keyword">and</span> table_name = <span class="string">&#x27;tablename&#x27;</span> ;</span><br><span class="line"><span class="comment">--查看列名注释</span></span><br><span class="line"><span class="keyword">select</span> column_name,column_comment <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema =<span class="string">&#x27;db&#x27;</span> <span class="keyword">and</span> table_name = <span class="string">&#x27;tablename&#x27;</span> ;</span><br></pre></td></tr></table></figure><h2 id="SqlServer"><a href="#SqlServer" class="headerlink" title="SqlServer"></a>SqlServer</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--创建表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span> ( </span><br><span class="line">     <span class="keyword">id</span> <span class="built_in">varchar</span>(<span class="number">200</span>) primary <span class="keyword">key</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">     <span class="keyword">sort</span> <span class="built_in">int</span>,</span><br><span class="line">     <span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">200</span>),</span><br><span class="line">)</span><br><span class="line"><span class="comment">--给字段添加注释</span></span><br><span class="line"><span class="keyword">EXECUTE</span> sp_addextendedproperty N<span class="string">&#x27;MS_Description&#x27;</span>,N<span class="string">&#x27;字段备注信息&#x27;</span>,N<span class="string">&#x27;SCHEMA&#x27;</span>,N<span class="string">&#x27;dbo&#x27;</span>,N<span class="string">&#x27;table&#x27;</span>,N<span class="string">&#x27;表名&#x27;</span>,N<span class="string">&#x27;column&#x27;</span>,N<span class="string">&#x27;添加注释的字段名&#x27;</span>;</span><br><span class="line"><span class="comment">--修改字段注释</span></span><br><span class="line"><span class="keyword">EXECUTE</span> sp_updateextendedproperty N<span class="string">&#x27;MS_Description&#x27;</span>,N<span class="string">&#x27;修改的注释内容&#x27;</span>,N<span class="string">&#x27;SCHEMA&#x27;</span>,N<span class="string">&#x27;dbo&#x27;</span>,N<span class="string">&#x27;table&#x27;</span>,N<span class="string">&#x27;表名&#x27;</span>,N<span class="string">&#x27;column&#x27;</span>,N<span class="string">&#x27;添加注释的字段名&#x27;</span>;</span><br><span class="line"><span class="comment">--删除字段注释 </span></span><br><span class="line"><span class="keyword">EXECUTE</span> sp_dropextendedproperty N<span class="string">&#x27;MS_Description&#x27;</span>,N<span class="string">&#x27;SCHEMA&#x27;</span>,N<span class="string">&#x27;dbo&#x27;</span>,N<span class="string">&#x27;table&#x27;</span>,N<span class="string">&#x27;表名&#x27;</span>,N<span class="string">&#x27;column&#x27;</span>,N<span class="string">&#x27;添加注释的字段名&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--添加表注释</span></span><br><span class="line"><span class="keyword">EXECUTE</span> sp_addextendedproperty N<span class="string">&#x27;MS_Description&#x27;</span>,N<span class="string">&#x27;注释内容&#x27;</span>,N<span class="string">&#x27;SCHEMA&#x27;</span>,N<span class="string">&#x27;dbo&#x27;</span>,N<span class="string">&#x27;table&#x27;</span>,N<span class="string">&#x27;表名&#x27;</span>,<span class="literal">NULL</span>, <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">--修改表注释</span></span><br><span class="line"><span class="keyword">EXECUTE</span> sp_updateextendedproperty  N<span class="string">&#x27;MS_Description&#x27;</span>,N<span class="string">&#x27;修改注释内容&#x27;</span>,N<span class="string">&#x27;SCHEMA&#x27;</span>,N<span class="string">&#x27;dbo&#x27;</span>,N<span class="string">&#x27;table&#x27;</span>,N<span class="string">&#x27;表名&#x27;</span>,<span class="literal">NULL</span>, <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">--删除表注释  </span></span><br><span class="line"><span class="keyword">execute</span> sp_dropextendedproperty N<span class="string">&#x27;MS_Description&#x27;</span>,N<span class="string">&#x27;SCHEMA&#x27;</span>,N<span class="string">&#x27;dbo&#x27;</span>,N<span class="string">&#x27;table&#x27;</span>,N<span class="string">&#x27;表名&#x27;</span>,<span class="literal">NULL</span>, <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">--获取表注释</span></span><br><span class="line"><span class="keyword">SELECT</span> obj.name <span class="keyword">AS</span> [TableName],pro.value <span class="keyword">AS</span> [Description] </span><br><span class="line"><span class="keyword">FROM</span> sys.objects obj <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sys.extended_properties pro <span class="keyword">ON</span> obj.object_id=pro.major_id</span><br><span class="line"><span class="keyword">WHERE</span> obj.type=<span class="string">&#x27;u&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--获取字段注释</span></span><br><span class="line"><span class="keyword">SELECT</span> A.name <span class="keyword">AS</span> table_name,B.name <span class="keyword">AS</span> column_name,C.value <span class="keyword">AS</span> column_description</span><br><span class="line"><span class="keyword">FROM</span> sys.tables A</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> sys.columns B <span class="keyword">ON</span> B.object_id = A.object_id</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sys.extended_properties C <span class="keyword">ON</span> C.major_id = B.object_id <span class="keyword">AND</span> C.minor_id = B.column_id</span><br><span class="line"><span class="keyword">WHERE</span> A.name = <span class="string">&#x27;表名&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Oracle、Mysql、SqlServer创建表和给表和字段加注释,sql注释</summary>
    
    
    
    <category term="SQL" scheme="https://junonin.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://junonin.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Sql随机查询数据语句(NewID(),Rnd,Rand(),Random())</title>
    <link href="https://junonin.github.io/posts/a4322757.html"/>
    <id>https://junonin.github.io/posts/a4322757.html</id>
    <published>2020-12-18T03:43:57.000Z</published>
    <updated>2020-12-19T06:31:05.524Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>想从数据库随机抽取数据，想到使用Rand()函数，记录下。<br>参考：<a href="https://www.cnblogs.com/alibai/p/4104564.html">SQL随机查询数据语句</a></p></blockquote><h2 id="SQL-Server"><a href="#SQL-Server" class="headerlink" title="SQL Server"></a>SQL Server</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> TOP N * <span class="keyword">From</span> <span class="keyword">TABLE</span> <span class="keyword">Order</span> <span class="keyword">By</span> NewID()</span><br><span class="line"></span><br><span class="line">NewID()函数将创建一个 uniqueidentifier 类型的唯一值。上面的语句实现效果是从<span class="keyword">Table</span>中随机读取N条记录。</span><br><span class="line">Uniqueidentifier用来存储一个全局唯一标识符，即GUID。</span><br></pre></td></tr></table></figure><h2 id="Access"><a href="#Access" class="headerlink" title="Access"></a>Access</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> TOP N * <span class="keyword">From</span> <span class="keyword">TABLE</span> <span class="keyword">Order</span> <span class="keyword">By</span> Rnd(<span class="keyword">ID</span>)</span><br><span class="line"></span><br><span class="line">Rnd(<span class="keyword">ID</span>) 其中的<span class="keyword">ID</span>是自动编号字段，可以利用其他任何数值来完成，比如用姓名字段(UserName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">Select</span> TOP N * <span class="keyword">From</span> <span class="keyword">TABLE</span> <span class="keyword">Order</span> <span class="keyword">BY</span> Rnd(<span class="keyword">Len</span>(UserName))</span><br></pre></td></tr></table></figure><h2 id="MySql"><a href="#MySql" class="headerlink" title="MySql"></a>MySql</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> * <span class="keyword">From</span> <span class="keyword">TABLE</span> <span class="keyword">Order</span> <span class="keyword">By</span> <span class="keyword">Rand</span>() <span class="keyword">Limit</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li>在查询分析器中执行：select rand()，可以看到结果会是类似于这样的随机小数：0.36361513486289558，像这样的小数在实际应用中用得不多，一般要取随机数都会取随机整数。那就看下面的两种随机取整数的方法：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A：<span class="keyword">select</span>  <span class="keyword">floor</span>(<span class="keyword">rand</span>()*N)  <span class="comment">---生成的数是这样的：12.0</span></span><br><span class="line">B：<span class="keyword">select</span> <span class="keyword">cast</span>( <span class="keyword">floor</span>(<span class="keyword">rand</span>()*N) <span class="keyword">as</span> <span class="built_in">int</span>)  <span class="comment">---生成的数是这样的：12</span></span><br><span class="line"></span><br><span class="line">A：<span class="keyword">select</span> <span class="keyword">ceiling</span>(<span class="keyword">rand</span>() * N)  <span class="comment">---生成的数是这样的：12.0</span></span><br><span class="line">B：<span class="keyword">select</span> <span class="keyword">cast</span>(<span class="keyword">ceiling</span>(<span class="keyword">rand</span>() * N) <span class="keyword">as</span> <span class="built_in">int</span>)  <span class="comment">---生成的数是这样的：12</span></span><br></pre></td></tr></table></figure></li><li>比较 CEILING 和 FLOOR<br>CEILING 函数返回大于或等于所给数字表达式的最小整数。FLOOR 函数返回小于或等于所给数字表达式的最大整数。例如，对于数字表达式 12.9273，CEILING 将返回 13，FLOOR 将返回 12。FLOOR 和 CEILING 返回值的数据类型都与输入的数字表达式的数据类型相同。</li></ul><h2 id="PostgreSQL"><a href="#PostgreSQL" class="headerlink" title="PostgreSQL"></a>PostgreSQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> glxt022 <span class="keyword">order</span> <span class="keyword">by</span> random() <span class="keyword">limit</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Sql随机查询数据语句</summary>
    
    
    
    <category term="SQL" scheme="https://junonin.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://junonin.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>windows server 服务器配置多用户登录</title>
    <link href="https://junonin.github.io/posts/f6bc6e38.html"/>
    <id>https://junonin.github.io/posts/f6bc6e38.html</id>
    <published>2020-12-07T08:06:14.000Z</published>
    <updated>2020-12-07T08:30:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>因为防止多个用户同时需要访问服务器导致服务器导致另一个用户正在使用的服务器被挤掉退出<br>参考：<a href="https://www.mysysadmintips.com/windows/clients/545-multiple-rdp-remote-desktop-sessions-in-windows-10">Windows 10中的多个RDP（远程桌面）会话</a><br>参考：<a href="https://blog.csdn.net/zl570932980/article/details/77671597">windows server 2012 r2服务器配置多用户登录</a><br>参考：<a href="https://lighti.me/2858.html">Windows Server 2012 实现多个用户同时远程桌面登陆</a><br>参考：<a href="https://github.com/stascorp/rdpwrap">RDP Wrapper Library by Stas’M (Github)</a></p></blockquote><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><blockquote><p>因为Windows系统可以通过修改本地组策略来改变RDP的登录属性来使多用户同时远程服务器</p></blockquote><ul><li><p>1.在 <strong>【运行】</strong> 输入 <strong>gpedit.msc</strong> 然后进行回车进入本地组策略<br><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/07/DxQOqs.png" alt="DxQOqs.png"><br><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/07/DxlflF.png" alt="DxlflF.png"></p></li><li><p>2.在左侧栏选择 <strong>【计算机配置】</strong> -&gt; <strong>【管理模板】</strong> -&gt; <strong>【Windows组件】</strong> 然后再右栏里选择 <strong>【运程桌面服务】</strong><br><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/07/Dx1VXQ.png" alt="Dx1VXQ.png"></p></li><li><p>3.选择 <strong>【远程桌面会话主机】</strong> 点击打开<br><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/07/Dx3Pb9.png" alt="Dx3Pb9.png"></p></li><li><p>4.选择 <strong>【连接】</strong> 点击打开<br><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/07/Dx3GPP.png" alt="Dx3GPP.png"></p></li><li><p>5.选择 <strong>【将远程桌面服务用户限制到单独的远程桌面服务会话】</strong> 点击打开，修改为 <strong>【已禁用】</strong> 操作完后选择 <strong>【应用】</strong> 最后 <strong>【确定】</strong><br><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/07/Dx34aR.png" alt="Dx34aR.png"></p></li><li><p>6.我这里修改的最大连接数是3，根据自己的需要修改连接数吧！<br>选择 <strong>【连接】</strong> 点击打开再选择 <strong>【限制连接的数量】</strong> 点击打开默认是已禁用的，选择 <strong>【已启用】</strong> ，然后选择 <strong>【应用】</strong> 最后 <strong>【确定】</strong><br><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/07/Dx8pJP.png" alt="Dx8pJP.png"></p></li></ul><p>这样就可以同时登录多用户登录了，如下：<br><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/07/Dx8swd.png" alt="Dx8swd.png"></p>]]></content>
    
    
    <summary type="html">windows server 服务器配置多用户登录</summary>
    
    
    
    <category term="Windows Server" scheme="https://junonin.github.io/categories/Windows-Server/"/>
    
    
    <category term="Windows Server" scheme="https://junonin.github.io/tags/Windows-Server/"/>
    
  </entry>
  
  <entry>
    <title>MySQL索引原则</title>
    <link href="https://junonin.github.io/posts/ca3480e9.html"/>
    <id>https://junonin.github.io/posts/ca3480e9.html</id>
    <published>2020-12-05T08:21:12.000Z</published>
    <updated>2020-12-05T09:22:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>有关索引的知识，记录下，防止遗忘</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> [<span class="keyword">UNIQUE</span> | FULLTEXT | SPATIAL]  <span class="keyword">INDEX</span> | <span class="keyword">KEY</span>  [索引名] (字段名<span class="number">1</span> [(长度)] [<span class="keyword">ASC</span> | <span class="keyword">DESC</span>]) [<span class="keyword">USING</span> 索引方法]；</span><br><span class="line">或</span><br><span class="line"><span class="keyword">CREATE</span>  [<span class="keyword">UNIQUE</span> | FULLTEXT | SPATIAL]  <span class="keyword">INDEX</span>  索引名 <span class="keyword">ON</span>  表名(字段名) [<span class="keyword">USING</span> 索引方法]；</span><br></pre></td></tr></table></figure><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="最左前缀匹配原则"><a href="#最左前缀匹配原则" class="headerlink" title="最左前缀匹配原则"></a>最左前缀匹配原则</h3><p>MySQL 会一直向右匹配直到遇到范围查询(&gt;、&lt;、between、like)就停止匹配。所以要尽量把这些条件放在最后，把“=”条件放在前面。举例如下：</p><pre><code>反例，不会用到 b 列的索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> a=<span class="number">1</span> <span class="keyword">and</span> c&gt;<span class="number">0</span> <span class="keyword">and</span> b=<span class="number">2</span></span><br></pre></td></tr></table></figure>正例，会用到 b 列的索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> a=<span class="number">1</span> <span class="keyword">and</span> b=<span class="number">2</span> <span class="keyword">and</span> c&gt;<span class="number">0</span></span><br></pre></td></tr></table></figure></code></pre><p>在索引选择上，尽量选择区分度高的列作为索引，区分度的公式是 count(distinct col)/count(*)，表示字段不重复的比例，比例越大我们扫描的记录数越少。</p><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>默认情况下，当取出的数据超过全表数据的 20% 时，不会使用索引。</p></div><h3 id="like-使用原则"><a href="#like-使用原则" class="headerlink" title="like 使用原则"></a>like 使用原则</h3><pre><code>反例，不使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> codedq <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">&#x27;%JUNO%&#x27;</span></span><br></pre></td></tr></table></figure>正例，使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> codedq <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">&#x27;JUNO%&#x27;</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="or-和-union-all"><a href="#or-和-union-all" class="headerlink" title="or 和 union all"></a>or 和 union all</h3><p>or 和 union all 的使用选择。推荐尽量将 or 转换为 union all。</p><pre><code>反例，不使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">&#x27;JUNO&#x27;</span> <span class="keyword">or</span> age=<span class="string">&#x27;20&#x27;</span></span><br></pre></td></tr></table></figure>正例，使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> <span class="keyword">name</span> =<span class="string">&#x27;JUNO&#x27;</span> </span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span> </span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> age =<span class="string">&#x27;20&#x27;</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="索引-函数"><a href="#索引-函数" class="headerlink" title="索引+函数"></a>索引+函数</h3><p>字段加上大多数函数都不会使用索引。所以尽量把函数放在数值上。</p><pre><code>反例，不使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> <span class="keyword">truncate</span>(price) = <span class="number">888</span></span><br></pre></td></tr></table></figure>正例，使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> price &gt; <span class="number">887</span> <span class="keyword">and</span> price &lt; <span class="number">889</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="索引列数据类型转换"><a href="#索引列数据类型转换" class="headerlink" title="索引列数据类型转换"></a>索引列数据类型转换</h3><p>如果索引列使用的类型不对，发生类型转换。那么就需要注意，很可能不会按照你的期望走索引。</p><pre><code>反例，不使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> mobile = <span class="number">1314520</span></span><br></pre></td></tr></table></figure>正例，使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> mobile = <span class="string">&#x27;1314520&#x27;</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="列上计算"><a href="#列上计算" class="headerlink" title="列上计算"></a>列上计算</h3><p>字段加运算符不会使用索引。所以尽量把运算放在数值上。</p><pre><code>反例，不使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">account</span>, amount</span><br><span class="line"><span class="keyword">FROM</span> codedq</span><br><span class="line"><span class="keyword">WHERE</span> amount + <span class="number">3000</span> &gt; <span class="number">5000</span>;</span><br></pre></td></tr></table></figure>正例，使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">account</span>, amount</span><br><span class="line"><span class="keyword">FROM</span> codedq</span><br><span class="line"><span class="keyword">WHERE</span> amount &gt; <span class="number">2000</span> ;</span><br></pre></td></tr></table></figure></code></pre><h3 id="组合索引"><a href="#组合索引" class="headerlink" title="组合索引"></a>组合索引</h3><p>使用组合索引时，必须要包括第一个列。</p><pre><code>例如<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> xttblog <span class="keyword">add</span> <span class="keyword">index</span>(a,b,c)：</span><br></pre></td></tr></table></figure>反例，不使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> b=<span class="number">1</span> <span class="keyword">and</span> c=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> b=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> c=<span class="number">2</span>;</span><br></pre></td></tr></table></figure>正例，使用索引： <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> a=<span class="number">1</span> <span class="keyword">AND</span> b=<span class="number">1</span> <span class="keyword">AND</span> c=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> a=<span class="number">1</span> <span class="keyword">AND</span> b=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> a=<span class="number">1</span> <span class="keyword">AND</span> c=<span class="number">2</span>;</span><br></pre></td></tr></table></figure></code></pre><h3 id="is-null或is-not-null"><a href="#is-null或is-not-null" class="headerlink" title="is null或is not null"></a>is null或is not null</h3><p>尽量避免使用 is null 或 is not null。</p><pre><code>反例，不使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> …</span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> codedq</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> age <span class="keyword">IS</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure>正例，使用索引： <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> …</span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> codedq</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> age &gt;<span class="number">0</span>;</span><br></pre></td></tr></table></figure></code></pre><h3 id="不等于（-）"><a href="#不等于（-）" class="headerlink" title="不等于（!=）"></a>不等于（!=）</h3><p>不等于（!=）不会使用索引。</p><pre><code>反例，不使用索引：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> xttblog</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> age !=<span class="number">0</span>;</span><br></pre></td></tr></table></figure>正例，使用索引： <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">FROM</span> xttblog</span><br><span class="line"></span><br><span class="line"><span class="keyword">WHERE</span> age &gt;<span class="number">0</span>;</span><br></pre></td></tr></table></figure></code></pre><h3 id="ORDER-BY-子句"><a href="#ORDER-BY-子句" class="headerlink" title="ORDER BY 子句"></a>ORDER BY 子句</h3><p>ORDER BY 子句只在以下的条件下使用索引：</p><ol><li><p>ORDER BY 中所有的列必须包含在相同的索引中并保持在索引中的排列顺序</p></li><li><p>ORDER BY 中不能既有 ASC 也有 DESC</p><pre><code> 举例： <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> xttblog <span class="keyword">add</span> <span class="keyword">index</span>(a,b);</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> xttblog <span class="keyword">add</span> <span class="keyword">index</span>(c);</span><br></pre></td></tr></table></figure> 反例，不使用索引： <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 不在一个索引中</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">order</span> <span class="keyword">by</span> a,c; </span><br><span class="line"><span class="comment">## 没有出现组合索引的第一列</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">order</span> <span class="keyword">by</span> b; </span><br><span class="line"><span class="comment">## 混合 ASC 和 DESC</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">order</span> <span class="keyword">by</span> a <span class="keyword">asc</span>, b <span class="keyword">desc</span>; </span><br><span class="line"><span class="comment">## where和order by用的不是同一个索引，where使用索引，order by不使用。</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> a=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> c; </span><br></pre></td></tr></table></figure> 正例，使用索引：  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">order</span> <span class="keyword">by</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">order</span> <span class="keyword">where</span> a=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">order</span> <span class="keyword">where</span> a=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> a,b;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">order</span> <span class="keyword">by</span> a <span class="keyword">desc</span>, b <span class="keyword">desc</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> xttblog <span class="keyword">where</span> c=<span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> c;</span><br></pre></td></tr></table></figure></code></pre></li></ol>]]></content>
    
    
    <summary type="html">MySQL索引原则</summary>
    
    
    
    <category term="SQL" scheme="https://junonin.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://junonin.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>RAID模式</title>
    <link href="https://junonin.github.io/posts/578763b3.html"/>
    <id>https://junonin.github.io/posts/578763b3.html</id>
    <published>2020-12-04T03:06:46.000Z</published>
    <updated>2020-12-04T03:49:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>因为安装了黑群晖，需要做一个raid来保证数据的安全和完整，便了解了下raid的原理。<br>参考：<a href="https://www.jianshu.com/p/71e94907b9da">基本RAID级别简介</a></p></blockquote><h2 id="RAID"><a href="#RAID" class="headerlink" title="RAID"></a>RAID</h2><h3 id="RAID-0：无差错控制的带区组"><a href="#RAID-0：无差错控制的带区组" class="headerlink" title="RAID 0：无差错控制的带区组"></a>RAID 0：无差错控制的带区组</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHWb6I.jpg" alt="DHWb6I.jpg"></p><p>要实现RAID 0必须要有两个以上硬盘驱动器，RAID 0实现了带区组，数据并不是保存在一个硬盘上，而是分成数据块保存在不同驱动器上。因为将数据分布在不）编辑和其它要求传输比较大的场合使用RAID0比较合适。同时，RAID可以提高数据传输速率，比如同驱动器上，所以数据吞吐率大大提高，驱动器的负载也比较平衡。如果刚好所需要的数据在不同的驱动器上效率最好。它不需要计算校验码，实现容易。它的缺点是它没有数据差错控制，如果一个驱动器中的数据发生错误，即使其它盘上的数据正确也无济于事了。不应该将它用于对数据稳定性要求高的场合。如果用户进行图象（包括动画所需读取的文件分布在两个硬盘上，这两个硬盘可以同时读取。那么原来读取同样文件的时间被缩短为1/2。在所有的级别中，RAID 0的速度是最快的。但是RAID 0没有冗余功能的，如果一个磁盘（物理）损坏，则所有的数据都无法使用。</p><h3 id="RAID-1：镜像结构"><a href="#RAID-1：镜像结构" class="headerlink" title="RAID 1：镜像结构"></a>RAID 1：镜像结构</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHWj78.jpg" alt="DHWj78.jpg"></p><p>对于使用这种RAID 1结构的设备来说，RAID控制器必须能够同时对两个盘进行读操作和对两个镜象盘进行写操作。因为是镜象结构在一组盘出现问题时，可以使用镜象，提高系统的容错能力。它比较容易设计和实现。每读一次盘只能读出一块数据，也就是说数据块传送速率与单独的盘的读取速率相同。因为RAID 1的校验十分完备，因此对系统的处理能力有很大的影响，通常的RAID功能由软件实现，而这样的实现方法在服务器负载比较重的时候会大大影响服务器效率。当您的系统需要极高的可靠性时，如进行数据统计，那么使用RAID 1比较合适。而且RAID 1技术支持“热替换”，即不断电的情况下对故障磁盘进行更换，更换完毕只要从镜像盘上恢复数据即可。当主硬盘损坏时，镜像硬盘就可以代替主硬盘工作。镜像硬盘相当于一个备份盘，可想而知，这种硬盘模式的安全性是非常高的，RAID 1的数据安全性在所有的RAID级别上来说是最好的。但是其磁盘的利用率却只有50%，是所有RAID级别中最低的。</p><h3 id="RAID-1-5：一个新生的磁盘阵列方式"><a href="#RAID-1-5：一个新生的磁盘阵列方式" class="headerlink" title="RAID 1.5：一个新生的磁盘阵列方式"></a>RAID 1.5：一个新生的磁盘阵列方式</h3><p>它具有RAID 0+1的特性，而不同的是，它的实现只需要2个硬盘。从表面上来看，组建RAID 1.5后的磁盘，两个都具有相同的数据。当然，RAID 1.5也是一种不能完全利用磁盘空间的磁盘阵列模式，因此，两个80GB的硬盘在组建RAID 1.5后，和RAID 1是一样的，即只有80GB的实际使用空间，另外80GB是它的备份数据。如果把两个硬盘分开，分别把他们运行在原系统，也是畅通无阻的。但通过实际应用，我们发现如果两个硬盘在分开运行后，其数据的轻微改变都会引起再次重组后的磁盘阵列，没法实现完全的数据恢复，而是以数据较少的磁盘为准。</p><h3 id="RAID-2：带海明码校验"><a href="#RAID-2：带海明码校验" class="headerlink" title="RAID 2：带海明码校验"></a>RAID 2：带海明码校验</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHfE7T.jpg" alt="DHfE7T.jpg"></p><p>这是RAID 0的改良版，以汉明码（Hamming Code）的方式将数据进行编码后分区为独立的比特，并将数据分别写入硬盘中。因为在数据中加入了错误修正码（ECC，Error Correction Code），所以数据整体的容量会比原始数据大一些，RAID 2最少要三台磁盘驱动器方能运作。从概念上讲，RAID 2同RAID 3类似， 两者都是将数据条块化分布于不同的硬盘上， 条块单位为位或字节。然而RAID 2 使用一定的编码技术来提供错误检查及恢复。这种编码技术需要多个磁盘存放检查及恢复信息，使得RAID 2技术实施更复杂。因此，在商业环境中很少使用。下图右边的各个磁盘上是数据的各个位，由一个数据不同的位运算得到的海明校验码可以保存另一组磁盘上，具体情况请见下图。由于海明码的特点，它可以在数据发生错误的情况下将错误校正，以保证输出的正确。它的数据传送速率相当高，如果希望达到比较理想的速度，那最好提高保存校验码ECC码的硬盘，对于控制器的设计来说，它又比RAID 3、4或5要简单。没有免费的午餐，这里也一样，要利用海明码，必须要付出数据冗余的代价。输出数据的速率与驱动器组中速度最慢的相等。</p><h3 id="RAID-3：带奇偶校验码的并行传送"><a href="#RAID-3：带奇偶校验码的并行传送" class="headerlink" title="RAID 3：带奇偶校验码的并行传送"></a>RAID 3：带奇偶校验码的并行传送</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHfmh4.jpg" alt="DHfmh4.jpg"></p><p>用Bit-interleaving（数据交错存储）技术，它需要通过编码再将数据比特分割后分别存在硬盘中，而将同比特检查后单独存在一个硬盘中，但由于数据内的比特分散在不同的硬盘上，因此就算要读取一小段数据资料都可能需要所有的硬盘进行工作，所以这种规格比较适于读取大量数据时使用。这种校验码与RAID 2不同，只能查错不能纠错。它访问数据时一次处理一个带区，这样可以提高读取和写入速度,它像RAID 0一样以并行的方式来存放数据，但速度没有RAID 0快。校验码在写入数据时产生并保存在另一个磁盘上。需要实现时用户必须要有三个以上的驱动器，写入速率与读出速率都很高，因为校验位比较少，因此计算时间相对而言比较少。用软件实现RAID控制将是十分困难的，控制器的实现也不是很容易。它主要用于图形（包括动画）等要求吞吐率比较高的场合。不同于RAID 2，RAID 3使用单块磁盘存放奇偶校验信息。如果一块磁盘失效，奇偶盘及其他数据盘可以重新产生数据。 如果奇偶盘失效，则不影响数据使用。RAID 3对于大量的连续数据可提供很好的传输率，但对于随机数据，奇偶盘会成为写操作的瓶颈。 利用单独的校验盘来保护数据虽然没有镜像的安全性高，但是硬盘利用率得到了很大的提高，为（n-1）/n。</p><h3 id="RAID-4：带奇偶校验码的独立磁盘结构"><a href="#RAID-4：带奇偶校验码的独立磁盘结构" class="headerlink" title="RAID 4：带奇偶校验码的独立磁盘结构"></a>RAID 4：带奇偶校验码的独立磁盘结构</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHf1nx.jpg" alt="DHf1nx.jpg"></p><p>RAID 4和RAID 3很像，不同的是它在分区时是以区块为单位分别存在硬盘中，但每次的数据访问都必须从同比特检查的那个硬盘中取出对应的同比特数据进行核对，也就是按磁盘进行的，每次是一个盘。由于过于频繁的使用，所以对硬盘的损耗可能会提高。（块交织技术，Block interleaving）在图上可以这么看，RAID 3是一次一横条，而RAID 4一次一竖条。它的特点的RAID 3也挺象，不过在失败恢复时，它的难度可要比RAID 3大得多了，控制器的设计难度也要大许多，而且访问数据的效率不怎么好。</p><h3 id="RAID-5：分布式奇偶校验的独立磁盘结构"><a href="#RAID-5：分布式奇偶校验的独立磁盘结构" class="headerlink" title="RAID 5：分布式奇偶校验的独立磁盘结构"></a>RAID 5：分布式奇偶校验的独立磁盘结构</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHfwjI.jpg" alt="DHfwjI.jpg"></p><p>RAID Level 5是一种储存性能、数据安全和存储成本兼顾的存储解决方案。它使用的是Disk Striping（硬盘分割）技术。RAID 5至少需要三个硬盘，RAID 5不是对存储的数据进行备份，而是把数据和相对应的奇偶校验信息存储到组成RAID5的各个磁盘上，并且奇偶校验信息和相对应的数据分别存储于不同的磁盘上。当RAID5的一个磁盘数据发生损坏后，可以利用剩下的数据和相应的奇偶校验信息去恢复被损坏的数据。RAID 5可以理解为是RAID 0和RAID 1的折衷方案。RAID 5可以为系统提供数据安全保障，但保障程度要比镜像低而磁盘空间利用率要比镜像高。RAID 5具有和RAID 0相近似的数据读取速度，只是因为多了一个奇偶校验信息，写入数据的速度相对单独写入一块硬盘的速度略慢，若使用“回写缓存”可以让性能改善不少。同时由于多个数据对应一个奇偶校验信息，RAID 5的磁盘空间利用率要比RAID 1高，存储成本相对较便宜。</p><h3 id="RAID-6：-两种存储的奇偶校验码的磁盘结构"><a href="#RAID-6：-两种存储的奇偶校验码的磁盘结构" class="headerlink" title="RAID 6： 两种存储的奇偶校验码的磁盘结构"></a>RAID 6： 两种存储的奇偶校验码的磁盘结构</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHf2CQ.jpg" alt="DHf2CQ.jpg"></p><p>与RAID 5相比，RAID 6增加第二个独立的奇偶校验信息块。两个独立的奇偶系统使用不同的算法，数据的可靠性非常高，任意两块磁盘同时失效时不会影响数据完整性。RAID 6需要分配给奇偶校验信息更大的磁盘空间和额外的校验计算，相对于RAID 5有更大的IO操作量和计算量，其“写性能”强烈取决于具体的实现方案，因此RAID 6通常不会通过软件方式来实现，而更可能通过硬件方式实现。同一数组中最多容许两个磁盘损坏。更换新磁盘后，数据将会重新算出并写入新的磁盘中。</p><h3 id="RAID-7：优化的高速数据传送磁盘结构"><a href="#RAID-7：优化的高速数据传送磁盘结构" class="headerlink" title="RAID 7：优化的高速数据传送磁盘结构"></a>RAID 7：优化的高速数据传送磁盘结构</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHfzb6.png" alt="DHfzb6.png"></p><p>RAID 7并非公开的RAID标准，而是Storage Computer Corporation的专利硬件产品名称，RAID 7是以RAID 3及RAID 4为基础所发展，但是经过强化以解决原来的一些限制。另外，在实现中使用大量的缓冲存储器以及用以实现异步数组管理的专用即时处理器，使得RAID 7可以同时处理大量的IO要求，所以性能甚至超越了许多其他RAID标准的实做产品。但也因为如此，在价格方面非常的高昂。</p><h3 id="RAID-10-01：高可靠性与高效磁盘结构"><a href="#RAID-10-01：高可靠性与高效磁盘结构" class="headerlink" title="RAID 10/01：高可靠性与高效磁盘结构"></a>RAID 10/01：高可靠性与高效磁盘结构</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHfO29.png" alt="DHfO29.png"></p><p>RAID 10是先分割数据再镜像，再将所有硬盘分为两组，视为以RAID 1作为最低组合，然后将每组RAID 1视为一个“硬盘”组合为RAID 0运作。</p>![DHhZrt.png](https://s3.ax1x.com/2020/12/04/DHhZrt.png)<p>RAID 01则是跟RAID 10的程序相反，是先镜像再将数据到分割两组硬盘。它将所有的硬盘分为两组，每组各自构成为RAID 0作为最低组合，而将两组硬盘组合为RAID 1运作。<p>当RAID 10有一个硬盘受损，其余硬盘会继续运作。RAID 01只要有一个硬盘受损，同组RAID 0的所有硬盘都会停止运作，只剩下其他组的硬盘运作，可靠性较低。如果以六个硬盘建RAID 01，镜像再用三个建RAID 0，那么坏一个硬盘便会有三个硬盘离线。因此，RAID 10远较RAID 01常用，零售主板绝大部分支持RAID 0/1/5/10，但不支持RAID 01。</p></p><h3 id="RAID-50：被称为分布奇偶位阵列条带"><a href="#RAID-50：被称为分布奇偶位阵列条带" class="headerlink" title="RAID 50：被称为分布奇偶位阵列条带"></a>RAID 50：被称为分布奇偶位阵列条带</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DHhqdf.png" alt="DHhqdf.png"></p><p>RAID 5与RAID 0的组合，先作RAID 5，再作RAID 0，也就是对多组RAID 5彼此构成Stripe访问。由于RAID 50是以RAID 5为基础，而RAID 5至少需要3颗硬盘，因此要以多组RAID 5构成RAID 50，至少需要6颗硬盘。以RAID 50最小的6颗硬盘配置为例，先把6颗硬盘分为2组，每组3颗构成RAID 5，如此就得到两组RAID 5，然后再把两组RAID 5构成RAID 0。<p>RAID 50在底层的任一组或多组RAID 5中出现1颗硬盘损坏时，仍能维持运作，不过如果任一组RAID 5中出现2颗或2颗以上硬盘损毁，整组RAID 50就会失效。</p><p>RAID 50由于在上层把多组RAID 5构成Stripe，性能比起单纯的RAID 5高，容量利用率比RAID5要低。比如同样使用9颗硬盘，由各3颗RAID 5再组成RAID 0的RAID 50，每组RAID 5浪费一颗硬盘，利用率为(1-3/9)，RAID 5则为(1-1/9)。</p></p><h3 id="RAID-53：称为高效数据传送磁盘结构"><a href="#RAID-53：称为高效数据传送磁盘结构" class="headerlink" title="RAID 53：称为高效数据传送磁盘结构"></a>RAID 53：称为高效数据传送磁盘结构</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DH4eSJ.png" alt="DH4eSJ.png"></p><p>它拥有一个镜射条带数组，硬盘里其中一个条带就是一个是由3组以上的RAID 5组成RAID 3硬盘阵列。</p><h3 id="RAID-60"><a href="#RAID-60" class="headerlink" title="RAID 60"></a>RAID 60</h3><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/12/04/DH4lTK.png" alt="DH4lTK.png"></p><p>RAID 6与RAID 0的组合：先作RAID 6，再作RAID 0。换句话说，就是对两组以上的RAID 6作Stripe访问。RAID 6至少需具备4颗硬盘，所以RAID 60的最小需求是8颗硬盘。<p>由于底层是以RAID 6组成，所以RAID 60可以容许任一组RAID 6中损毁最多2颗硬盘，而系统仍能维持运作；不过只要底层任一组RAID 6中损毁3颗硬盘，整组RAID 60就会失效，当然这种情况的概率相当低。</p><p>比起单纯的RAID 6，RAID 60的上层透过结合多组RAID 6构成Stripe访问，因此性能较高。不过使用门槛高，而且容量利用率低是较大的问题。</p></p><h2 id="软RAID和硬RAID"><a href="#软RAID和硬RAID" class="headerlink" title="软RAID和硬RAID"></a>软RAID和硬RAID</h2><p>根据实现模式，RAID又分为软RAID和硬RAID。</p><h3 id="软件磁盘阵列（Software-RAID）"><a href="#软件磁盘阵列（Software-RAID）" class="headerlink" title="软件磁盘阵列（Software RAID）"></a>软件磁盘阵列（Software RAID）</h3><p>主要由CPU处理数组存储作业，缺点为耗损较多CPU资源运算RAID，优点则是价格偏低。分类有3种：</p><p>基于主板的磁盘阵列：只需要主板支持即可（通常是芯片组内置的RAID功能，如Intel Matrix RAID，Intel Rapid Storage Technology），不需要任何磁盘阵列卡。若主板损坏，可能难以购买同款主板重建RAID。</p><p>硬件辅助磁盘阵列（Hardware-Assisted RAID）：需要一张基于Fake RAID的RAID卡，以及厂商所提供的驱动程序，但此类RAID卡仍然通过CPU进行运算。这款RAID较易迁移到其他电脑。RAID功能靠运行于操作系统的厂商驱动程序和CPU运算提供。</p><p>操作系统的RAID功能：如Linux、FreeBSD、Windows Server等操作系统内置RAID功能。</p><h3 id="硬件磁盘阵列（Hardware-RAID）"><a href="#硬件磁盘阵列（Hardware-RAID）" class="headerlink" title="硬件磁盘阵列（Hardware RAID）"></a>硬件磁盘阵列（Hardware RAID）</h3><p>RAID卡上内置处理器，不需要服务器的CPU运算。优点是读写性能最快，不占用服务器资源，可用于任何操作系统，也能在系统断电后，透过备份电池模块（BBU, Backup Battery Unit）以及非易失性存储器 (NVRAM)将硬盘读写日志档（Journal）包含的剩余读写作业先记录在存储器中，等待电力供应撤销后，再由NVRAM取回日志档数据，接着再完成读写作业，将剩余读写作业安全完成以确保读写完整性。备份电池模块通常会配合数组卡的Write-Back缓存模式，借由此存储器缓存读写作业以得到更高的读写性能；但是没有备份电池模块的硬件磁盘阵列卡，切勿使用Write-Back缓存模式以免遭遇断电情形导致读写数据流失。此外，因为硬件磁盘阵列卡搭载内置处理器，所以可以与操作系统分离出来，对硬盘进行各种作业，还原作业的速度也比软件磁盘阵列快。缺点是其售价很高。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;因为安装了黑群晖，需要做一个raid来保证数据的安全和完整，便了解了下raid的原理。&lt;br&gt;参考：&lt;a href</summary>
      
    
    
    
    <category term="RAID" scheme="https://junonin.github.io/categories/RAID/"/>
    
    
    <category term="RAID" scheme="https://junonin.github.io/tags/RAID/"/>
    
  </entry>
  
  <entry>
    <title>SqlServer 更改数据库名称</title>
    <link href="https://junonin.github.io/posts/ab2a9e10.html"/>
    <id>https://junonin.github.io/posts/ab2a9e10.html</id>
    <published>2020-11-30T02:04:02.000Z</published>
    <updated>2020-11-30T02:22:37.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>数据库因为一开始命名不规范，导致后来需要修改数据库名称<br>参考：<a href="https://www.cnblogs.com/xuyufeng/p/9197137.html">SqlServer 更改数据库名称</a></p></blockquote><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><ul><li>1.首先选中需要更改数据库右击属性找到文件，可直接修改数据库逻辑名称</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/11/30/D2Cq8e.png"></p><ul><li><p>2.选中数据库右击选择重命名修改数据库名称。 (必要时候需要改成单用户模式)</p></li><li><p>3.将数据库进行分离，找到数据库文件mdf与ldf文件，直接更改文件名称</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/11/30/D2PcZt.png"></p><ul><li>4.附加数据库回来（此处注意需要重新选择物理文件路径，默认的为原先老的文件名）</li></ul><p><img src= "/img/loading.gif" data-lazy-src="https://s3.ax1x.com/2020/11/30/D2PfJS.png"></p>]]></content>
    
    
    <summary type="html">SqlServer 更改数据库名称</summary>
    
    
    
    <category term="SQL" scheme="https://junonin.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://junonin.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>WebService</title>
    <link href="https://junonin.github.io/posts/c05121c7.html"/>
    <id>https://junonin.github.io/posts/c05121c7.html</id>
    <published>2020-11-27T08:30:14.000Z</published>
    <updated>2020-12-30T09:32:37.326Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>WebService学习记录<br>因为公司的WebService是用.net做的，业务端是用java来显示，需要将WebService转成jar包调用。</p></blockquote><h2 id="Webservice"><a href="#Webservice" class="headerlink" title="Webservice"></a>Webservice</h2><p>可以使用Eclipse的<strong>Web Service Client</strong>生成代码</p><p>默认生成的代码不带认证信息 </p><p>需要添加 -XadditionalHeaders  参数</p><p>生成jar包  D:\Doc  使用wsimport的-clientjar  不包含源码打包成jar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsimport -keep -d D:\Doc -s D:\Doc -p com.yd.service -clientjar D:\Doc\service-1.0.3.jar -encoding utf-8 -verbose -XadditionalHeaders http://192.168.1.131:33046/YdDatacenterCloud.CloudCenter/CloudWebServicer/?wsdl</span><br></pre></td></tr></table></figure><p>生成jar包  D:\Doc 包含源码打包成jar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsimport -keep -d D:\Doc -s D:\Doc -p com.yd.service -encoding utf-8 -verbose -XadditionalHeaders http://www.xxxxxx.com:xxx/ServerService?wsdl</span><br></pre></td></tr></table></figure><p>在D:\Doc目录下启动命令行将com和META-INF一起打成jar包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar cvf service-1.0.2.jar com META-INF</span><br></pre></td></tr></table></figure><p>更新MANIFEST.MF文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar cvf service-1.0.2.jar com</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar -uvfm service-V1.0.0.jar MANIFEST.MF</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">WebService</summary>
    
    
    
    <category term="WebService" scheme="https://junonin.github.io/categories/WebService/"/>
    
    
    <category term="WebService" scheme="https://junonin.github.io/tags/WebService/"/>
    
  </entry>
  
  <entry>
    <title>删除Maven下无效的lastUpdated文件</title>
    <link href="https://junonin.github.io/posts/b5aff3ae.html"/>
    <id>https://junonin.github.io/posts/b5aff3ae.html</id>
    <published>2020-11-27T03:06:53.000Z</published>
    <updated>2021-01-16T09:39:57.468Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>删除maven仓库中大量未下载成功的.lastUpdated文件。<br>参考：<a href="https://www.cnblogs.com/cxzdy/p/5662161.html">删除maven仓库中的LastUpdated文件</a></p></blockquote><h2 id="bat脚本"><a href="#bat脚本" class="headerlink" title="bat脚本"></a>bat脚本</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@echo off</span><br><span class="line">rem REPOSITORY_PATH是Maven的路径</span><br><span class="line">set REPOSITORY_PATH=D:\M2</span><br><span class="line">rem 正在搜索...</span><br><span class="line">for /f &quot;delims=&quot; %%i in (&#x27;dir /b /s &quot;%REPOSITORY_PATH%\*lastUpdated*&quot;&#x27;) do (</span><br><span class="line">    del /s /q %%i</span><br><span class="line">)</span><br><span class="line">rem 搜索完毕</span><br><span class="line">::pause</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>附录：<a href="https://juno.lanzous.com/iyn3Dithizc">bat脚本下载</a></p></div>]]></content>
    
    
    <summary type="html">删除Maven下无效的lastUpdated文件</summary>
    
    
    
    <category term="Tools" scheme="https://junonin.github.io/categories/Tools/"/>
    
    <category term="Maven" scheme="https://junonin.github.io/categories/Tools/Maven/"/>
    
    
    <category term="Maven" scheme="https://junonin.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>数据库服务器情况</title>
    <link href="https://junonin.github.io/posts/9b7af42.html"/>
    <id>https://junonin.github.io/posts/9b7af42.html</id>
    <published>2020-11-27T02:12:12.000Z</published>
    <updated>2021-02-02T08:25:48.218Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>想了了解数据库目前的连接池情况和日志文件占用情况</p></blockquote><h2 id="连接池情况"><a href="#连接池情况" class="headerlink" title="连接池情况"></a>连接池情况</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> master.dbo.sysprocesses</span><br><span class="line"><span class="keyword">where</span> dbid = DB_ID(<span class="string">&#x27;database&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> @@MAX_CONNECTIONS</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> @@CONNECTIONS</span><br><span class="line"></span><br><span class="line">sp_who <span class="string">&#x27;sa&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> spid,ecid,<span class="keyword">status</span>,loginame,hostname,cmd,request_id</span><br><span class="line"><span class="keyword">from</span> sys.sysprocesses <span class="keyword">where</span> loginame=<span class="string">&#x27;sa&#x27;</span> <span class="keyword">and</span> hostname=<span class="string">&#x27;JUNO&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="日志文件占用情况"><a href="#日志文件占用情况" class="headerlink" title="日志文件占用情况"></a>日志文件占用情况</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DBCC SQLPERF(LOGSPACE)</span><br><span class="line"></span><br><span class="line">DBCC showfilestats</span><br><span class="line"></span><br><span class="line">Exec sp_spaceused</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> a.name [文件名称]</span><br><span class="line">,<span class="keyword">cast</span>(a.[<span class="keyword">size</span>]*<span class="number">1.0</span>/<span class="number">128</span> <span class="keyword">as</span> <span class="built_in">decimal</span>(<span class="number">12</span>,<span class="number">1</span>)) <span class="keyword">AS</span> [文件设置大小(MB)]</span><br><span class="line">,<span class="keyword">CAST</span>( fileproperty(s.name,<span class="string">&#x27;SpaceUsed&#x27;</span>)/(<span class="number">8</span>*<span class="number">16.0</span>) <span class="keyword">AS</span> <span class="built_in">DECIMAL</span>(<span class="number">12</span>,<span class="number">1</span>)) <span class="keyword">AS</span> [文件所占空间(MB)]</span><br><span class="line">,<span class="keyword">CAST</span>( (fileproperty(s.name,<span class="string">&#x27;SpaceUsed&#x27;</span>)/(<span class="number">8</span>*<span class="number">16.0</span>))/(s.size/(<span class="number">8</span>*<span class="number">16.0</span>))*<span class="number">100.0</span>  <span class="keyword">AS</span> <span class="built_in">DECIMAL</span>(<span class="number">12</span>,<span class="number">1</span>)) <span class="keyword">AS</span> [所占空间率%]</span><br><span class="line">,<span class="keyword">CASE</span> <span class="keyword">WHEN</span> A.growth =<span class="number">0</span> <span class="keyword">THEN</span> <span class="string">&#x27;文件大小固定，不会增长&#x27;</span> <span class="keyword">ELSE</span> <span class="string">&#x27;文件将自动增长&#x27;</span> <span class="keyword">end</span> [增长模式]</span><br><span class="line">,<span class="keyword">CASE</span> <span class="keyword">WHEN</span> A.growth &gt; <span class="number">0</span> <span class="keyword">AND</span> is_percent_growth = <span class="number">0</span> <span class="keyword">THEN</span> <span class="string">&#x27;增量为固定大小&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> A.growth &gt; <span class="number">0</span> <span class="keyword">AND</span> is_percent_growth = <span class="number">1</span> <span class="keyword">THEN</span> <span class="string">&#x27;增量将用整数百分比表示&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27;文件大小固定，不会增长&#x27;</span> <span class="keyword">END</span> <span class="keyword">AS</span> [增量模式]</span><br><span class="line">,<span class="keyword">CASE</span> <span class="keyword">WHEN</span> A.growth &gt; <span class="number">0</span> <span class="keyword">AND</span> is_percent_growth = <span class="number">0</span> <span class="keyword">THEN</span> <span class="keyword">cast</span>(<span class="keyword">cast</span>(a.growth*<span class="number">1.0</span>/<span class="number">128</span><span class="keyword">as</span> <span class="built_in">decimal</span>(<span class="number">12</span>,<span class="number">0</span>)) <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>)+<span class="string">&#x27;MB&#x27;</span></span><br><span class="line"><span class="keyword">WHEN</span> A.growth &gt; <span class="number">0</span> <span class="keyword">AND</span> is_percent_growth = <span class="number">1</span> <span class="keyword">THEN</span> <span class="keyword">cast</span>(<span class="keyword">cast</span>(a.growth <span class="keyword">AS</span> <span class="built_in">decimal</span>(<span class="number">12</span>,<span class="number">0</span>)) <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>)+<span class="string">&#x27;%&#x27;</span></span><br><span class="line"><span class="keyword">ELSE</span> <span class="string">&#x27;文件大小固定，不会增长&#x27;</span> <span class="keyword">end</span> <span class="keyword">AS</span> [增长值(%或MB)]</span><br><span class="line">,a.physical_name <span class="keyword">AS</span> [文件所在目录]</span><br><span class="line">,a.type_desc <span class="keyword">AS</span> [文件类型]</span><br><span class="line"><span class="keyword">FROM</span> sys.database_files  a</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> sys.sysfiles <span class="keyword">AS</span> s <span class="keyword">ON</span> a.[file_id]=s.fileid</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> sys.dm_db_file_space_usage b <span class="keyword">ON</span> a.[file_id]=b.[file_id]</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> a.[<span class="keyword">type</span>]</span><br></pre></td></tr></table></figure><h2 id="数据库收缩日志文件"><a href="#数据库收缩日志文件" class="headerlink" title="数据库收缩日志文件"></a>数据库收缩日志文件</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> @dbName <span class="built_in">varchar</span>(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> @dbNamelog <span class="built_in">varchar</span>(<span class="number">128</span>)</span><br><span class="line"><span class="keyword">DECLARE</span> @<span class="keyword">sql</span> <span class="keyword">nvarchar</span>(<span class="number">2000</span>) </span><br><span class="line">  </span><br><span class="line"><span class="comment">--创建游标获取所有数据库</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">tables</span> <span class="keyword">CURSOR</span> <span class="keyword">FOR</span></span><br><span class="line">   <span class="keyword">select</span> <span class="keyword">name</span> <span class="keyword">from</span> sysdatabases <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">&#x27;master&#x27;</span>,<span class="string">&#x27;tempdb&#x27;</span>,<span class="string">&#x27;model&#x27;</span>,<span class="string">&#x27;msdb&#x27;</span>,<span class="string">&#x27;ReportServer&#x27;</span>,<span class="string">&#x27;ReportServerTempDB&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 开启游标</span></span><br><span class="line"><span class="keyword">OPEN</span> <span class="keyword">tables</span></span><br><span class="line"><span class="comment">--获取光标位置</span></span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> </span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">tables</span> <span class="keyword">INTO</span> @dbName</span><br><span class="line"> </span><br><span class="line"><span class="comment">--FETCH 语句成功</span></span><br><span class="line"><span class="keyword">WHILE</span> @@FETCH_STATUS = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">set</span> @dbNamelog=@dbName + <span class="string">&#x27;_log&#x27;</span></span><br><span class="line"></span><br><span class="line">print @dbNamelog</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> @<span class="keyword">sql</span>=<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">USE &#x27;</span>+@dbName+<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">ALTER DATABASE &#x27;</span>+@dbName+<span class="string">&#x27; SET RECOVERY SIMPLE WITH NO_WAIT</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">ALTER DATABASE &#x27;</span>+@dbName+<span class="string">&#x27; SET RECOVERY SIMPLE</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">USE &#x27;</span>+@dbName+<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">DBCC SHRINKFILE (N&#x27;&#x27;&#x27;</span>+@dbNamelog+<span class="string">&#x27;&#x27;&#x27; , 11, TRUNCATEONLY)</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">USE &#x27;</span>+@dbName+<span class="string">&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">-- ALTER DATABASE &#x27;</span>+@dbName+<span class="string">&#x27; SET RECOVERY FULL WITH NO_WAIT</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">-- ALTER DATABASE &#x27;</span>+@dbName+<span class="string">&#x27; SET RECOVERY FULL</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">SELECT file_id, name FROM sys.database_files&#x27;</span></span><br><span class="line"> </span><br><span class="line">exec(@<span class="keyword">sql</span>)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">FETCH</span> <span class="keyword">NEXT</span></span><br><span class="line">      <span class="keyword">FROM</span> <span class="keyword">tables</span></span><br><span class="line">      <span class="keyword">INTO</span> @dbName</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--关闭游标</span></span><br><span class="line"><span class="keyword">CLOSE</span> <span class="keyword">tables</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>附录：<a href="https://juno.lanzous.com/i2l1zitgpib">数据库情况</a><br>附录：<a href="https://juno.lanzous.com/iiUXml80xif">数据库收缩日志文件</a></p></div>]]></content>
    
    
    <summary type="html">数据库服务器情况，日志文件占用情况，连接池情况</summary>
    
    
    
    <category term="SQL" scheme="https://junonin.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://junonin.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>一些Bat的备份脚本</title>
    <link href="https://junonin.github.io/posts/6ad92fda.html"/>
    <id>https://junonin.github.io/posts/6ad92fda.html</id>
    <published>2020-11-26T09:34:00.000Z</published>
    <updated>2020-11-27T02:29:10.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>因为需要主从盘，跨服务器之类的备份，记录一下常用的备份脚本<br>参考：<a href="https://www.bandisoft.com/bandizip/help/parameter/">Bandizip 命令行参数</a><br>参考：<a href="https://www.cnblogs.com/lidabo/archive/2012/08/10/2632219.html">Winrar 命令行参数</a></p></blockquote><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ul><li>一个备份到从盘的demo<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@echo off</span><br><span class="line">rem echo是off 不打印注释rem</span><br><span class="line">::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span><br><span class="line">::     备份Tomcat</span><br><span class="line">::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span><br><span class="line">title  备份Tomcat</span><br><span class="line"></span><br><span class="line">set rar=E:\backup\</span><br><span class="line">rem 根据时间在E:\backup\创建当天的新文件夹  例：20200512</span><br><span class="line">set data=%date:~0,4%%date:~5,2%%date:~8,2%</span><br><span class="line">md %rar%%data%</span><br><span class="line"></span><br><span class="line">rem 利用Bandizip做从盘备份</span><br><span class="line">Bandizip bc -aoa -o:%rar%%data%\ D:\Tomcat8-01 D:\Tomcat8-02 D:\Tomcat8-03 D:\Tomcat8-04 D:\Tomcat8-05 </span><br><span class="line">rem D:\Tomcat8-01 → E:\backup\20200512\Tomcat8-01.zip</span><br><span class="line">rem D:\Tomcat8-02 → E:\backup\20200512\Tomcat8-02.zip</span><br><span class="line">rem D:\Tomcat8-03 → E:\backup\20200512\Tomcat8-03.zip</span><br><span class="line"></span><br><span class="line">rem 删除备份目录下7天前的文件（目录为E:\backup）</span><br><span class="line">forfiles /p &quot;E:\backup&quot; /s /m *.* /d -7 /c &quot;cmd /c del @path&quot;</span><br><span class="line"></span><br><span class="line">rem pause</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note danger modern"><p>删除某个目录下系统文件修改日期七天前的</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">rem 删除C:\sql back目录下7天前的*.dbb *.bak文件</span><br><span class="line">Forfiles /p &quot;c:\sql back&quot; /s /d -7 /m *.dbb /c &quot;cmd /c del /q /f @path&quot;</span><br><span class="line">Forfiles /p &quot;c:\sql back&quot; /s /d -7 /m *.bak /c &quot;cmd /c del /q /f @path&quot;</span><br></pre></td></tr></table></figure></div></li></ul><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>附录：<a href="https://juno.lanzous.com/iFH4jirht5g">Winrar下载</a><br>附录：<a href="https://juno.lanzous.com/icO91irht7i">Bandizip下载</a></p></div>]]></content>
    
    
    <summary type="html">备份后自动压缩脚本，winrar命令行压缩，bandizip命令行压缩</summary>
    
    
    
    <category term="Bat" scheme="https://junonin.github.io/categories/Bat/"/>
    
    
    <category term="Bat" scheme="https://junonin.github.io/tags/Bat/"/>
    
  </entry>
  
  <entry>
    <title>批量备份数据库</title>
    <link href="https://junonin.github.io/posts/2e2ac8a6.html"/>
    <id>https://junonin.github.io/posts/2e2ac8a6.html</id>
    <published>2020-11-26T08:21:17.000Z</published>
    <updated>2020-11-27T02:28:36.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>一些业务服务器在同一个服务器上很久没有做全量备份了，需要临时备份一次，就想做一个脚本全部备份一次。<br>参考：<a href="https://www.cnblogs.com/gaizai/p/3542898.html">SQL Server 批量完整备份</a></p></blockquote><h2 id="单库备份"><a href="#单库备份" class="headerlink" title="单库备份"></a>单库备份</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> datacenter</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> @SqlBackupDataBase <span class="keyword">as</span> <span class="keyword">nvarchar</span>(<span class="number">1000</span>)</span><br><span class="line"><span class="comment">--根据时间拼接bak名称，形成备份语句</span></span><br><span class="line"><span class="keyword">set</span> @SqlBackupDataBase=N<span class="string">&#x27;BACKUP DATABASE Gd_datacenter TO DISK = &#x27;&#x27;F:\backup\Gd_datacenter-&#x27;</span>+</span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">10</span>),<span class="keyword">GETDATE</span>(),<span class="number">120</span>)+<span class="string">&#x27;Full.bak&#x27;&#x27;WITH FORMAT, NAME = N&#x27;&#x27;Gd_datacenter_Full_&#x27;</span> + </span><br><span class="line"><span class="keyword">CONVERT</span>(<span class="built_in">varchar</span>(<span class="number">10</span>),<span class="keyword">GETDATE</span>(),<span class="number">120</span>)+<span class="string">&#x27;&#x27;&#x27; </span></span><br><span class="line"><span class="string">&#x27;</span></span><br><span class="line"><span class="comment">--备份文件格式</span></span><br><span class="line">print @SqlBackupDataBase <span class="comment">--打印出来（为了方便调试，可省略）</span></span><br><span class="line">exec sp_executesql @SqlBackupDataBase </span><br></pre></td></tr></table></figure><h2 id="批量备份"><a href="#批量备份" class="headerlink" title="批量备份"></a>批量备份</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span></span><br><span class="line">      @FileName <span class="built_in">VARCHAR</span>(<span class="number">200</span>),</span><br><span class="line">      @CurrentTime <span class="built_in">VARCHAR</span>(<span class="number">50</span>),</span><br><span class="line">      @DBName <span class="built_in">VARCHAR</span>(<span class="number">100</span>),</span><br><span class="line">      @<span class="keyword">SQL</span> <span class="built_in">VARCHAR</span>(<span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> @CurrentTime = <span class="keyword">CONVERT</span>(<span class="built_in">CHAR</span>(<span class="number">8</span>),<span class="keyword">GETDATE</span>(),<span class="number">112</span>) + <span class="keyword">CAST</span>(<span class="keyword">DATEPART</span>(hh, <span class="keyword">GETDATE</span>()) <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>) + <span class="keyword">CAST</span>(<span class="keyword">DATEPART</span>(mi, <span class="keyword">GETDATE</span>()) <span class="keyword">AS</span> <span class="built_in">VARCHAR</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">DECLARE</span> CurDBName <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> </span><br><span class="line">    <span class="keyword">SELECT</span> <span class="keyword">NAME</span> <span class="keyword">FROM</span> Master..SysDatabases <span class="keyword">where</span> dbid&gt;<span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">OPEN</span> CurDBName</span><br><span class="line"><span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> CurDBName <span class="keyword">INTO</span> @DBName</span><br><span class="line"><span class="keyword">WHILE</span> @@FETCH_STATUS = <span class="number">0</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">    <span class="comment">--Execute Backup</span></span><br><span class="line">    <span class="comment">--保存bak的位置可以更改</span></span><br><span class="line">    <span class="keyword">SET</span> @FileName = <span class="string">&#x27;E:\DBBackup\&#x27;</span> + @DBName + <span class="string">&#x27;_&#x27;</span> + @CurrentTime</span><br><span class="line">    <span class="keyword">SET</span> @<span class="keyword">SQL</span> = <span class="string">&#x27;BACKUP DATABASE [&#x27;</span>+ @DBName +<span class="string">&#x27;] TO DISK = &#x27;&#x27;&#x27;</span> + @FileName + <span class="string">&#x27;.bak&#x27;</span> +</span><br><span class="line">     <span class="string">&#x27;&#x27;&#x27; WITH NOINIT, NOUNLOAD, NAME = N&#x27;&#x27;&#x27;</span> + @DBName + <span class="string">&#x27;_backup&#x27;&#x27;, NOSKIP, STATS = 10, NOFORMAT&#x27;</span></span><br><span class="line">    EXEC(@<span class="keyword">SQL</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">--Get Next DataBase</span></span><br><span class="line">    <span class="keyword">FETCH</span> <span class="keyword">NEXT</span> <span class="keyword">FROM</span> CurDBName <span class="keyword">INTO</span> @DBName</span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CLOSE</span> CurDBName</span><br><span class="line"><span class="keyword">DEALLOCATE</span> CurDBName</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>附录：<a href="https://juno.lanzous.com/iPwKeiso2da">SQL下载</a></p></div>]]></content>
    
    
    <summary type="html">批量备份数据库</summary>
    
    
    
    <category term="SQL" scheme="https://junonin.github.io/categories/SQL/"/>
    
    
    <category term="SQL" scheme="https://junonin.github.io/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>Redis</title>
    <link href="https://junonin.github.io/posts/7b25d017.html"/>
    <id>https://junonin.github.io/posts/7b25d017.html</id>
    <published>2020-11-25T10:02:03.000Z</published>
    <updated>2021-02-05T10:10:02.830Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Redis学习记录</p></blockquote><h2 id="Redis下载"><a href="#Redis下载" class="headerlink" title="Redis下载"></a>Redis下载</h2><blockquote><p><strong><a href="https://github.com/MicrosoftArchive/redis/releases">Windows下载地址3.x.x</a></strong></p><p><strong><a href="https://github.com/tporadowski/redis/releases">Windows下载地址5.x.x</a></strong></p></blockquote><h2 id="Windows下配置"><a href="#Windows下配置" class="headerlink" title="Windows下配置"></a>Windows下配置</h2><blockquote><h3 id="redis-windows-conf文件配置密码"><a href="#redis-windows-conf文件配置密码" class="headerlink" title="redis.windows.conf文件配置密码"></a><strong>redis.windows.conf</strong>文件配置密码</h3><h3 id="requirepass-password-你的密码"><a href="#requirepass-password-你的密码" class="headerlink" title="requirepass password(你的密码)"></a>requirepass password(你的密码)</h3></blockquote><p>Windows下启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">@echo off</span><br><span class="line">cd /d D:\Redis-x64-3.2.100[替换为你的redis路径]</span><br><span class="line"></span><br><span class="line">start redis-server.exe redis.windows.conf</span><br><span class="line"></span><br><span class="line">echo redis start...</span><br><span class="line">::pause</span><br></pre></td></tr></table></figure><p>在Redis目录下运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli.exe -h 127.0.0.1 -p 6379</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set  key  abc</span><br><span class="line"></span><br><span class="line">get  key </span><br></pre></td></tr></table></figure><h2 id="Redis服务安装"><a href="#Redis服务安装" class="headerlink" title="Redis服务安装"></a>Redis服务安装</h2><ul><li>进入Redis安装包目录，cmd安装服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server --service-install redis.windows-service.conf --loglevel verbose</span><br></pre></td></tr></table></figure><p>提示 Redistribution successfully installed as a service.即安装成功</p><p><img src= "/img/loading.gif" data-lazy-src="https://s2.ax1x.com/2019/11/21/MIOn29.png" alt="x"></p><h2 id="Redis-cli命令行远程连接Redis服务"><a href="#Redis-cli命令行远程连接Redis服务" class="headerlink" title="Redis-cli命令行远程连接Redis服务"></a>Redis-cli命令行远程连接Redis服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h host -p port -a password</span><br><span class="line">redis-cli -h 192.168.1.131 -p 6379 -a &#x27;&#x27;</span><br></pre></td></tr></table></figure><h3 id="查看redis客户端连接"><a href="#查看redis客户端连接" class="headerlink" title="查看redis客户端连接"></a>查看redis客户端连接</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis-cli info clients</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Clients</span></span><br><span class="line">connected_clients:6000</span><br><span class="line">client_longest_output_list:0</span><br><span class="line">client_biggest_input_buf:5792</span><br><span class="line">blocked_clients:0</span><br></pre></td></tr></table></figure><h3 id="查看redis客户端状态"><a href="#查看redis客户端状态" class="headerlink" title="查看redis客户端状态"></a>查看redis客户端状态</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">redis-cli client list</span><br><span class="line"><span class="meta">#</span><span class="bash"> list</span></span><br><span class="line">addr=127.0.0.1:52555 fd=5 name= age=855 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=client</span><br><span class="line">addr=127.0.0.1:52787 fd=6 name= age=6 idle=5 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=ping</span><br></pre></td></tr></table></figure><p>age:表示连接存在的时间，单位秒<br>idle:表示连接空闲时间，单位秒</p><h3 id="查看redis客户端超时设置"><a href="#查看redis客户端超时设置" class="headerlink" title="查看redis客户端超时设置"></a>查看redis客户端超时设置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli config get timeout</span><br><span class="line">&quot;timeout&quot;</span><br><span class="line">&quot;0&quot; #0表示不开启空闲清除</span><br></pre></td></tr></table></figure><h3 id="设置空闲清理时间"><a href="#设置空闲清理时间" class="headerlink" title="设置空闲清理时间"></a>设置空闲清理时间</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli config set timeout 600 #单位秒</span><br></pre></td></tr></table></figure><h3 id="redis-60-秒内的最大响应延迟"><a href="#redis-60-秒内的最大响应延迟" class="headerlink" title="redis 60 秒内的最大响应延迟"></a>redis 60 秒内的最大响应延迟</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379 --intrinsic-latency 60</span><br></pre></td></tr></table></figure><h3 id="查看一段时间内-Redis-的最小、最大、平均访问延迟"><a href="#查看一段时间内-Redis-的最小、最大、平均访问延迟" class="headerlink" title="查看一段时间内 Redis 的最小、最大、平均访问延迟"></a>查看一段时间内 Redis 的最小、最大、平均访问延迟</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h 127.0.0.1 -p 6379 --latency-history -i 1</span><br></pre></td></tr></table></figure><h2 id="redis慢日志命令"><a href="#redis慢日志命令" class="headerlink" title="redis慢日志命令"></a>redis慢日志命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 命令执行耗时超过 5 毫秒，记录慢日志</span></span><br><span class="line">CONFIG SET slowlog-log-slower-than 5000</span><br><span class="line"><span class="meta">#</span><span class="bash"> 只保留最近 500 条慢日志</span></span><br><span class="line">CONFIG SET slowlog-max-len 500</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看最近的5条慢日志</span></span><br><span class="line">SLOWLOG get 5</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 集中过期会导致 Redis 延迟变大，因为主动过期 key 的定时任务，是在 Redis 主线程中执行的。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 key 的过期时间时，增加一个随机时间</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1.在过期时间点之后的 5 分钟内随机过期掉</span></span><br><span class="line">redis.expireat(key, expire_time + random(300))</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.Redis 4.0 以上版本，开启 lazy-free 机制</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 释放过期 key 的内存，放到后台线程执行</span></span><br><span class="line">lazyfree-lazy-expire yes</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 Redis 进程是否使用到了 Swap，内存被换到了磁盘上会变慢</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 先找到 Redis 的进程 ID</span></span><br><span class="line">ps -aux | grep redis-server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 Redis Swap 使用情况</span></span><br><span class="line">cat /proc/$pid/smaps | egrep &#x27;^(Swap|Size)&#x27;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> redis内存碎片</span></span><br><span class="line">Memory</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存碎片率计算：mem_fragmentation_ratio = used_memory_rss / used_memory</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开启自动内存碎片整理（总开关）</span></span><br><span class="line">activedefrag yes</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存使用 100MB 以下，不进行碎片整理</span></span><br><span class="line">active-defrag-ignore-bytes 100mb</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存碎片率超过 10%，开始碎片整理</span></span><br><span class="line">active-defrag-threshold-lower 10</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存碎片率超过 100%，尽最大努力碎片整理</span></span><br><span class="line">active-defrag-threshold-upper 100</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存碎片整理占用 CPU 资源最小百分比</span></span><br><span class="line">active-defrag-cycle-min 1</span><br><span class="line"><span class="meta">#</span><span class="bash"> 内存碎片整理占用 CPU 资源最大百分比</span></span><br><span class="line">active-defrag-cycle-max 25</span><br><span class="line"><span class="meta">#</span><span class="bash"> 碎片整理期间，对于 List/Set/Hash/ZSet 类型元素一次 Scan 的数量</span></span><br><span class="line">active-defrag-max-scan-fields 1000</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">Redis，Redis服务，Redis-windows</summary>
    
    
    
    <category term="Redis" scheme="https://junonin.github.io/categories/Redis/"/>
    
    
    <category term="Redis" scheme="https://junonin.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat服务</title>
    <link href="https://junonin.github.io/posts/9240bb8c.html"/>
    <id>https://junonin.github.io/posts/9240bb8c.html</id>
    <published>2020-11-24T08:41:27.000Z</published>
    <updated>2020-11-24T08:57:02.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>Tomcat服务，异常处理笔记</p></blockquote><h2 id="Tomcat安装卸载服务"><a href="#Tomcat安装卸载服务" class="headerlink" title="Tomcat安装卸载服务"></a>Tomcat安装卸载服务</h2><p>安装 cmd 根目录    <code>service.bat install Tomcat9</code></p><p>卸载cmd根目录    <code>service.bat remove Tomcat9</code></p><h2 id="Nt-Kernel-amp-System-占用80端口"><a href="#Nt-Kernel-amp-System-占用80端口" class="headerlink" title="Nt Kernel &amp; System 占用80端口"></a>Nt Kernel &amp; System 占用80端口</h2><p><code>net stop http 按Y 确定</code></p><p><code>Sc config http start= disabled</code></p><p>重启Apache</p><h2 id="Tomcat8080端口无法启动"><a href="#Tomcat8080端口无法启动" class="headerlink" title="Tomcat8080端口无法启动"></a>Tomcat8080端口无法启动</h2><p>查看端口占用情况<br><code>netstat -ano|findstr 8080</code></p><p>删除占用端口的PID<br><code>taskkill /pid 18352 /f</code></p><ul><li>强制关闭8080端口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">setlocal enabledelayedexpansion</span><br><span class="line">rem 8080端口</span><br><span class="line"><span class="keyword">for</span> /f <span class="string">&quot;delims=  tokens=1&quot;</span> %%i <span class="keyword">in</span> (<span class="string">&#x27;netstat -aon ^| findstr &quot;8080&quot;&#x27;</span>) <span class="keyword">do</span> (</span><br><span class="line"><span class="built_in">set</span> a=%%i</span><br><span class="line">goto js</span><br><span class="line">)</span><br><span class="line">:js</span><br><span class="line">taskkill /f /pid <span class="string">&quot;!a:~71,5!&quot;</span></span><br><span class="line">pause&gt;nul</span><br></pre></td></tr></table></figure><h2 id="Tomcat部署WAR包访问不带项目名的方式"><a href="#Tomcat部署WAR包访问不带项目名的方式" class="headerlink" title="Tomcat部署WAR包访问不带项目名的方式"></a>Tomcat部署WAR包访问不带项目名的方式</h2><ol><li><p>将项目打成WAR包放在Tomcat的webapps目录下</p></li><li><p>在Tomcat的安装目录的conf下找到server.xml的文件，如：D:\apache-tomcat-9.0.8\conf\server.xml</p></li><li><p>在Host标签里边添加</p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">&quot;localhost&quot;</span>  <span class="attr">appBase</span>=<span class="string">&quot;webapps&quot;</span> <span class="attr">unpackWARs</span>=<span class="string">&quot;true&quot;</span> <span class="attr">autoDeploy</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;myproject&quot;</span> <span class="attr">reloadable</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line"> <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>Context标签内容，注意path填空，docBase为项目名称</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">&quot;8080&quot;</span> <span class="attr">protocol</span>=<span class="string">&quot;HTTP/1.1&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">&quot;20000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">&quot;8443&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在此可以修改port的默认端口名8080</li></ul><ol start="4"><li>再次访问即可携带项目名称或不带都可以访问到项目。如localhost:8080/或localhost:8080/myproject</li></ol><h2 id="webapps"><a href="#webapps" class="headerlink" title="webapps"></a>webapps</h2><blockquote><p><strong><em>webapps</em>是用来存放运行工程的目录</strong></p></blockquote><ol><li>在服务器上部署web项目时，直接将项目war包放入tomcat中的webapps文件下后重启tomcat后，war包会自动解压，这时访问项目的地址是ip+端口+<strong>项目名称</strong>就可以正常访问项目。</li></ol><p>注：webapps目录和放在ROOT目录的区别是webapps不需要解压，ROOT需要解压；webapps访问项目需要加项目名，ROOT不需要加项目名。</p><h2 id="Tomcat的加载运行机制"><a href="#Tomcat的加载运行机制" class="headerlink" title="Tomcat的加载运行机制"></a>Tomcat的加载运行机制</h2><ol><li><p>Tomcat_Home/lib目录下的jar包</p></li><li><p>然后加载 Tomcat_Home/ webapps/项目名/WEB-NF/lib的jar包</p></li><li><p>最后加载的是 Tomcat_HOME/webapps/项目名/WEB-INF/ classes下的类文件</p></li></ol><div class="note danger modern"><ul><li>注：本机的 Tomcat_HOME为你本机的Tomcat路径</li><li>关键是： Tomcat 按上述顺序依次加载资源，当后加载的资源与之前加载的资源相重时，后加载的资源会继续加载并将之前的资源覆盖</li></ul></div><div class="note red icon simple"><i class="note-icon fas fa-fan"></i><p>附录：<a href="https://juno.lanzous.com/igmH6iq3vra">Kill8080.bat下载</a></p></div>]]></content>
    
    
    <summary type="html">Tomcat服务，端口占用，部署webapp</summary>
    
    
    
    <category term="JAVA" scheme="https://junonin.github.io/categories/JAVA/"/>
    
    <category term="JDK" scheme="https://junonin.github.io/categories/JAVA/JDK/"/>
    
    
    <category term="Tomcat" scheme="https://junonin.github.io/tags/Tomcat/"/>
    
  </entry>
  
</feed>
