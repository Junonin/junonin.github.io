<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>以甯为意</title>
  
  
  <link href="http://junonin.github.io/atom.xml" rel="self"/>
  
  <link href="http://junonin.github.io/"/>
  <updated>2020-10-10T06:20:46.490Z</updated>
  <id>http://junonin.github.io/</id>
  
  <author>
    <name>Juno Nin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Typora图床</title>
    <link href="http://junonin.github.io/posts/d67c4ae5.html"/>
    <id>http://junonin.github.io/posts/d67c4ae5.html</id>
    <published>2020-09-27T16:00:00.000Z</published>
    <updated>2020-10-10T06:20:46.490Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;picBed&quot;</span>: &#123;</span><br><span class="line">  <span class="attr">&quot;github&quot;</span>: &#123;</span><br><span class="line">   <span class="attr">&quot;repo&quot;</span>: <span class="string">&quot;Junonin/CloudImg&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;94ca52b56a70c00e03a80e2f215ea2ae1c4a9125&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;img/&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;customUrl&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">   <span class="attr">&quot;branch&quot;</span>: <span class="string">&quot;master&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;current&quot;</span>: <span class="string">&quot;github&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;uploader&quot;</span>: <span class="string">&quot;github&quot;</span></span><br><span class="line"> &#125;,</span><br><span class="line"> <span class="attr">&quot;picgoPlugins&quot;</span>: &#123;</span><br><span class="line">  <span class="attr">&quot;picgo-plugin-smms-user&quot;</span>: <span class="literal">true</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="七牛云"><a href="#七牛云" class="headerlink" title="七牛云"></a>七牛云</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span>: <span class="string">&quot;qiniu&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;qiniu&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;accessKey&quot;</span>: <span class="string">&quot;p8ND0-TzhfLmILsCGOnjpdtRtv8m327vaf183Egi&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;secretKey&quot;</span>: <span class="string">&quot;lA-4ecs6_4mTheA4I-Rdyc_Ul1SW5RuAYDD14CzH&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;bucket&quot;</span>: <span class="string">&quot;junonin&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://junonin.clouddn.com&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;area&quot;</span>: <span class="string">&quot;na0&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;options&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;path&quot;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;picgo-plugin-smms-user&quot;</span>: <span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="SM-MS"><a href="#SM-MS" class="headerlink" title="SM.MS"></a>SM.MS</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;picBed&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;uploader&quot;</span>: <span class="string">&quot;smms&quot;</span>, <span class="comment">// 代表当前的默认上传图床为 SM.MS,</span></span><br><span class="line">    <span class="attr">&quot;smms&quot;</span>: &#123;</span><br><span class="line">      <span class="attr">&quot;token&quot;</span>: <span class="string">&quot;gFkSK6fWws1RfCZ3VYzIDZKwmxcNy1ty&quot;</span> <span class="comment">//XXXX替换为你注册获得的token</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;picgoPlugins&quot;</span>: &#123;&#125; <span class="comment">// 为插件预留</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Github&quot;&gt;&lt;a href=&quot;#Github&quot; class=&quot;headerlink&quot; title=&quot;Github&quot;&gt;&lt;/a&gt;Github&lt;/h3&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutt</summary>
      
    
    
    
    <category term="Tools" scheme="http://junonin.github.io/categories/Tools/"/>
    
    
    <category term="Typora" scheme="http://junonin.github.io/tags/Typora/"/>
    
  </entry>
  
  <entry>
    <title>WinSCP同步脚本</title>
    <link href="http://junonin.github.io/posts/e9a5b8d2.html"/>
    <id>http://junonin.github.io/posts/e9a5b8d2.html</id>
    <published>2020-08-28T16:00:00.000Z</published>
    <updated>2020-10-10T06:20:46.494Z</updated>
    
    <content type="html"><![CDATA[<p>创建xxx.bat脚本调用run.txt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@echo on</span><br><span class="line">rem echo是off 不打印注释rem</span><br><span class="line">title  同步文件</span><br><span class="line">::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span><br><span class="line">::     同步文件</span><br><span class="line">::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::</span><br><span class="line">cd &quot;C:\Program Files (x86)\WinSCP\&quot;</span><br><span class="line">::以命令行方式同步数据     </span><br><span class="line">set data=%date:~0,4%%date:~5,2%%date:~8,2%</span><br><span class="line">&quot;C:\Program Files (x86)\WinSCP\WinSCP.exe&quot; /console /script=C:\Users\JUNO\Desktop\run.txt /log=C:\log\%data%-log.txt</span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>创建run.txt</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"># winscp.exe /console /script=sample.txt </span><br><span class="line"></span><br><span class="line"># Automatically answer all prompts negatively not to stall</span><br><span class="line"></span><br><span class="line"># the script on errors</span><br><span class="line"></span><br><span class="line"># option echo  on|off </span><br><span class="line"></span><br><span class="line">option echo off</span><br><span class="line"></span><br><span class="line"># option batch on|off|abort|continue</span><br><span class="line"></span><br><span class="line">option batch on</span><br><span class="line"></span><br><span class="line"># option confirm  on|off </span><br><span class="line"></span><br><span class="line">#无需确认直接操作</span><br><span class="line">option confirm off</span><br><span class="line"></span><br><span class="line"># option transfer  binary|ascii|automatic </span><br><span class="line"></span><br><span class="line">#服务端如果没有该文件，则将本地文件删除</span><br><span class="line"></span><br><span class="line"># option synchdelete  on|off</span><br><span class="line"></span><br><span class="line"># option exclude clear | <span class="tag">&lt;<span class="name">mask</span>&gt;</span>[;<span class="tag">&lt;<span class="name">mask2</span>&gt;</span>...]</span><br><span class="line"></span><br><span class="line"># option include clear | <span class="tag">&lt;<span class="name">mask</span>&gt;</span>[;<span class="tag">&lt;<span class="name">mask2</span>&gt;</span>...]</span><br><span class="line"></span><br><span class="line">option synchdelete off</span><br><span class="line"></span><br><span class="line"># open [ sftp|ftp|scp:// ][  [ :password ] @ ] <span class="tag">&lt;<span class="name">host</span>&gt;</span> [ :<span class="tag">&lt;<span class="name">port</span>&gt;</span> ]</span><br><span class="line"></span><br><span class="line"># open user:password@example.com</span><br><span class="line"></span><br><span class="line"># Connect   FTP地址</span><br><span class="line"></span><br><span class="line">open ftp://yd-video:ABCabc123@183.236.23.5:33035</span><br><span class="line"></span><br><span class="line"># Change remote directory</span><br><span class="line"></span><br><span class="line"># 如果同步到远程FTP时,可用此命令转到远程某个目录下</span><br><span class="line"></span><br><span class="line">cd /backup/   </span><br><span class="line"></span><br><span class="line"># Change local directory</span><br><span class="line"></span><br><span class="line"># set to Self&#x27;s working dir  设置需要同步到远程FTP的本地文件目录</span><br><span class="line"></span><br><span class="line">lcd C:\Users\JUNO\Desktop\Learn</span><br><span class="line"></span><br><span class="line"># Force binary mode transfer</span><br><span class="line"></span><br><span class="line"># 使用二进制格式传送 </span><br><span class="line"></span><br><span class="line">option transfer binary</span><br><span class="line"></span><br><span class="line"># Download file to the local directory d:\</span><br><span class="line"></span><br><span class="line"># 拉取文件到本地</span><br><span class="line"></span><br><span class="line"># get examplefile.txt d:\</span><br><span class="line"></span><br><span class="line"># synchronize local|remote|both [ <span class="tag">&lt;<span class="name">local</span> <span class="attr">directory</span>&gt;</span> [ <span class="tag">&lt;<span class="name">remote</span> <span class="attr">directory</span>&gt;</span> ] ]  </span><br><span class="line"></span><br><span class="line"># 从远程同步到本地用Local;从本地同步到远程用Remote</span><br><span class="line"></span><br><span class="line">synchronize remote  </span><br><span class="line"></span><br><span class="line"># Disconnect</span><br><span class="line"></span><br><span class="line">close</span><br><span class="line"></span><br><span class="line"># Exit WinSCP</span><br><span class="line"></span><br><span class="line">exit</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;创建xxx.bat脚本调用run.txt&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="Tools" scheme="http://junonin.github.io/categories/Tools/"/>
    
    
    <category term="WinSCP" scheme="http://junonin.github.io/tags/WinSCP/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB</title>
    <link href="http://junonin.github.io/posts/8ead567e.html"/>
    <id>http://junonin.github.io/posts/8ead567e.html</id>
    <published>2020-08-26T16:00:00.000Z</published>
    <updated>2020-10-10T06:20:46.489Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Docker环境"><a href="#Docker环境" class="headerlink" title="Docker环境"></a>Docker环境</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">进入docker里的mongodb操作界面</span></span><br><span class="line">docker exec -it mongo mongo admin</span><br><span class="line"><span class="meta">#</span><span class="bash">设置管理员账户</span></span><br><span class="line">db.createUser(&#123; user: &#x27;JUNO&#x27;, pwd: &#x27;123456&#x27;, </span><br><span class="line">roles: [ &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125; ] &#125;);</span><br><span class="line"><span class="meta">#</span><span class="bash">授权登录</span></span><br><span class="line">数据库内部</span><br><span class="line">db.auth(&quot;JUNO&quot;,&quot;123456&quot;);</span><br><span class="line">外部shell</span><br><span class="line">mongo --authenticationDatabase  -u  -p</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">修改密码</span></span><br><span class="line">db.updateUser(</span><br><span class="line">   &quot;root&quot;,</span><br><span class="line">   &#123;</span><br><span class="line">      pwd: &quot;abc&quot;</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="MongoDB数据库"><a href="#MongoDB数据库" class="headerlink" title="MongoDB数据库"></a>MongoDB数据库</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#查看所有数据库</span><br><span class="line">#要数据库有数据才显示数据库</span><br><span class="line">show dbs</span><br><span class="line"></span><br><span class="line">#查看所有用户</span><br><span class="line">show users</span><br><span class="line"></span><br><span class="line">#如果数据库不存在，则创建数据库，否则切换到指定数据库。</span><br><span class="line">use DATABASE_NAME</span><br><span class="line"></span><br><span class="line">db.dropDatabase(&quot;DATABASE_NAME&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建和删除用户都要在对应的数据库下</span><br><span class="line">use test;</span><br><span class="line">db.dropUser(&quot;test&quot;);</span><br><span class="line"></span><br><span class="line">#查看已有集合</span><br><span class="line">show collections </span><br><span class="line">show tables</span><br><span class="line"></span><br><span class="line">db.COLLECTION_NAME.drop()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">增加一条_id不存在的数据</span><br><span class="line">db.COLLECTION_NAME.insert(document)</span><br><span class="line"></span><br><span class="line">如果 _id 主键存在则更新数据，如果不存在就插入数据</span><br><span class="line">db.COLLECTION_NAME.insertOne(document)</span><br><span class="line">db.COLLECTION_NAME.replaceOne(document) </span><br><span class="line"></span><br><span class="line">#定义变量插入</span><br><span class="line">document&#x3D;(&#123;title: &#39;MongoDB 教程&#39;, </span><br><span class="line">    description: &#39;MongoDB 是一个 Nosql 数据库&#39;</span><br><span class="line">&#125;);</span><br><span class="line">db.col.insert(document)</span><br><span class="line"></span><br><span class="line">#插入单条记录</span><br><span class="line">db.collection.insertOne(&#123;&quot;a&quot;: 3&#125;)</span><br><span class="line">#插入多条记录</span><br><span class="line">db.collection.insertMany([&#123;&quot;b&quot;: 3&#125;, &#123;&#39;c&#39;: 4&#125;])</span><br></pre></td></tr></table></figure><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><h5 id=""><a href="#" class="headerlink" title=""></a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">先查询</span><br><span class="line">db.col.find(&#123;&#39;name&#39;:&#39;xxx&#39;&#125;)</span><br><span class="line">删除</span><br><span class="line">db.col.remove(&#123;&#39;name&#39;:&#39;xxx&#39;&#125;)</span><br><span class="line"></span><br><span class="line">只想删除第一条找到的记录可以设置 justOne 为 1</span><br><span class="line">db.COLLECTION_NAME.remove(DELETION_CRITERIA,1)</span><br></pre></td></tr></table></figure><h5 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h5><h5 id="-1"><a href="#-1" class="headerlink" title=""></a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">#修改所有匹配的数据</span><br><span class="line">db.col.update(&#123;&#39;title&#39;:&#39;MongoDB 教程&#39;&#125;,&#123;$set:&#123;&#39;title&#39;:&#39;MongoDB&#39;&#125;&#125;)</span><br><span class="line">#只会修改第一条匹配的数据</span><br><span class="line">#需要设置 multi 参数为 true</span><br><span class="line">db.col.update(&#123;&#39;title&#39;:&#39;MongoDB 教程&#39;&#125;,&#123;$set:&#123;&#39;title&#39;:&#39;MongoDB&#39;&#125;&#125;,&#123;multi:true&#125;)</span><br><span class="line"></span><br><span class="line">$inc</span><br><span class="line">对某个字段进行增减操作，若键值不存在便增加</span><br><span class="line">db.col.update(&#123;&quot;uid&quot; : &quot;201203&quot;&#125;,&#123;&quot;$inc&quot;:&#123;&quot;size&quot; : 1&#125;&#125;)</span><br><span class="line"></span><br><span class="line">$set</span><br><span class="line">指定一个键并覆盖更新键值，若键不存在并创建</span><br><span class="line">db.col.update(&#123;&quot;uid&quot; : &quot;20120002&quot;,&quot;type&quot; : &quot;3&quot;&#125;,&#123;&quot;$set&quot;:&#123;&quot;sname&quot;:&quot;ssk&quot;&#125;&#125;)</span><br><span class="line"></span><br><span class="line">$unset</span><br><span class="line">用来删除键</span><br><span class="line">db.col.update(&#123;&#39;aaa&#39;:&#39;1111&#39;&#125;,&#123;&#39;$unset&#39;:&#123;&#39;size&#39;:1&#125;&#125;)</span><br><span class="line">删除&#123;&#39;size&#39;：2&#125;的键值</span><br><span class="line"></span><br><span class="line">$push</span><br><span class="line">数组类型的键添加一个数组元素，不过滤重复的数据。添加时键存在，要求键值类型必须是数组；键不存在，则创建数组类型的键。</span><br><span class="line">db.col.update(&#123;&#39;aaa&#39;:&#39;1111&#39;&#125;,&#123;&#39;$push&#39;:&#123;&#39;name&#39;:&#39;xxx&#39;&#125;&#125;)</span><br><span class="line">&quot;name&quot; : [ &quot;xxx&quot;, &quot;xxx&quot; ]</span><br><span class="line"></span><br><span class="line">$ne&#x2F;$addToSet</span><br><span class="line">给数组类型键值添加一个元素时，避免在数组中产生重复数据，$ne在有些情况是不通行的。</span><br><span class="line">db.col.update(&#123;&#39;aaa&#39;:&#39;1111&#39;&#125;,&#123;&#39;$ne&#39;:&#123;&#39;name&#39;:&#39;xxx&#39;&#125;&#125;)</span><br><span class="line">db.col.update(&#123;&#39;aaa&#39;:&#39;1111&#39;&#125;,&#123;&#39;$ne&#39;:&#123;&#39;addToSet&#39;:&#39;xxx&#39;&#125;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$pop</span><br><span class="line">删除数据元素</span><br><span class="line">从数组的头部 -1</span><br><span class="line">db.col.update(&#123;&#39;aaa&#39;:&#39;1111&#39;&#125;,&#123;&#39;$pop&#39;:&#123;&#39;name&#39;:-1&#125;&#125;)</span><br><span class="line">从数组的尾部删除 1</span><br><span class="line">db.col.update(&#123;&#39;aaa&#39;:&#39;1111&#39;&#125;,&#123;&#39;$pop&#39;:&#123;&#39;name&#39;:1&#125;&#125;)</span><br><span class="line">从数组的尾部删除 0</span><br><span class="line">db.col.update(&#123;&#39;aaa&#39;:&#39;1111&#39;&#125;,&#123;&#39;$pop&#39;:&#123;&#39;name&#39;:0&#125;&#125;)</span><br><span class="line"></span><br><span class="line">$pull</span><br><span class="line">从数组中删除满足条件的元素</span><br><span class="line">db.col.update(&#123;&#39;aaa&#39;:&#39;1111&#39;&#125;,&#123;&#39;$pull&#39;:&#123;&#39;name&#39;:&#39;xxx&#39;&#125;&#125;)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h5><h5 id="-2"><a href="#-2" class="headerlink" title=""></a></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#等于&#39;name&#39;:&#39;xxx&#39;</span><br><span class="line">db.col.find(&#123;&#39;name&#39;:&#39;xxx&#39;&#125;)</span><br><span class="line"></span><br><span class="line">#大于&gt;$gt（greater  than ）</span><br><span class="line">db.col.find(&#123;&#39;name&#39;:&#123;$gt:20&#125;&#125;)</span><br><span class="line"></span><br><span class="line">#小于&lt;$lt (less  than )</span><br><span class="line">db.col.find(&#123;&#39;name&#39;:&#123;$lt:20&#125;&#125;)</span><br><span class="line"></span><br><span class="line">#大于等于  &gt;&#x3D;$gte(greater  than or   equal to)</span><br><span class="line">db.col.find(&#123;&#39;name&#39;:&#123;$gte:20&#125;&#125;)</span><br><span class="line"></span><br><span class="line">#小于等于  &lt;&#x3D;$lte(less than  or equal to )</span><br><span class="line">db.col.find(&#123;&#39;name&#39;:&#123;$lte:20&#125;&#125;)</span><br><span class="line"></span><br><span class="line">#不等于</span><br><span class="line">$ne  !&#x3D; （not equal to）  &#123;&#39;age&#39;: &#123;&#39;$ne&#39;: 20&#125;&#125;</span><br><span class="line"></span><br><span class="line">#在范围内</span><br><span class="line">$in    &#123;&#39;age&#39;: &#123;&#39;$in&#39;: [20, 23]&#125;&#125;   注意用list</span><br><span class="line"></span><br><span class="line">#不在范围内</span><br><span class="line">$nin  (not in) &#123;&#39;age&#39;: &#123;&#39;$nin&#39;: [20, 23]&#125;&#125; </span><br><span class="line">这个方法可以计算某个值既不等于x也不等于y</span><br><span class="line"></span><br><span class="line">匹配以M开头的名字</span><br><span class="line">$regex (正则匹配） db.collection.find(&#123;&#39;name&#39;: &#123;&#39;$regex&#39;: &#39;^M.*&#39;&#125;&#125;)  </span><br><span class="line">        </span><br><span class="line">查找name属性存在</span><br><span class="line">$exists   属性是否存在  &#123;&#39;name&#39;: &#123;&#39;$exists&#39;: True&#125;&#125;     </span><br><span class="line">        </span><br><span class="line">#类型判断</span><br><span class="line">$type     类型判断        &#123;&#39;age&#39;: &#123;&#39;$type&#39;: &#39;int&#39;&#125;&#125;    age的类型为int</span><br><span class="line"></span><br><span class="line">#text类型的属性中包含Mike字符串</span><br><span class="line">$text      文本查询      &#123;&#39;$text&#39;: &#123;&#39;$search&#39;: &#39;Mike&#39;&#125;&#125;     </span><br><span class="line"></span><br><span class="line">#查找多种条件</span><br><span class="line">$or  查找多种条件   (&#123;&#39;$or&#39;:[&#123;&#39;name&#39;:&#39;chen&#39;&#125;,&#123;&#39;name&#39;:&#39;wang&#39;&#125;]&#125;)</span><br></pre></td></tr></table></figure><h5 id="MongoDB权限"><a href="#MongoDB权限" class="headerlink" title="MongoDB权限"></a>MongoDB权限</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#创建用户</span><br><span class="line">db.createUser(</span><br><span class="line">  &#123;</span><br><span class="line">    user: &quot;admin&quot;,</span><br><span class="line">    pwd: &quot;123456&quot;,</span><br><span class="line">    roles: [</span><br><span class="line">       &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot; &#125;,</span><br><span class="line">       &#123; role: &quot;dbOwner&quot;, db: &quot;Test&quot; &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#更改用户权限</span><br><span class="line">db.updateUser(&#39;admin&#39;,&#123;roles:[&#123;role:&#39;userAdminAnyDatabase&#39;,db:&#39;admin&#39;&#125;]&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">db.updateUser( &quot;abc&quot;,</span><br><span class="line">&#123;</span><br><span class="line">roles:[</span><br><span class="line">         &#123; role : &quot;readWrite&quot;, db : &quot;abc&quot;  &#125;,</span><br><span class="line">     &#123;role:&quot;read&quot;, db:&quot;testDB&quot;&#125;</span><br><span class="line">    </span><br><span class="line">      ]</span><br><span class="line">&#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#增加权限</span><br><span class="line">db.grantRolesToUser( &quot;&lt;username&gt;&quot;, [ &lt;roles&gt; ], &#123; &lt;writeConcern&gt; &#125; )</span><br><span class="line"></span><br><span class="line">#回收权限</span><br><span class="line">db.revokeRolesFromUser( &quot;&lt;username&gt;&quot;, [ &lt;roles&gt; ], &#123; &lt;writeConcern&gt; &#125;)</span><br><span class="line"></span><br><span class="line">--db.grantRolesToUser(&quot;usertest&quot;, [&#123;role:&quot;read&quot;, db:&quot;testDB&quot;&#125;])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="数据库用户角色（Database-User-Roles）："><a href="#数据库用户角色（Database-User-Roles）：" class="headerlink" title="数据库用户角色（Database User Roles）："></a>数据库用户角色（Database User Roles）：</h4><ul><li>read：授予User只读数据的权限</li><li>readWrite：授予User读写数据的权限</li></ul><h4 id="数据库管理角色（Database-Administration-Roles）："><a href="#数据库管理角色（Database-Administration-Roles）：" class="headerlink" title="数据库管理角色（Database Administration Roles）："></a>数据库管理角色（Database Administration Roles）：</h4><ul><li>dbAdmin：在当前dB中执行管理操作</li><li><strong>dbOwner：在当前DB中执行任意操作</strong></li><li>userAdmin：在当前DB中管理User</li></ul><h4 id="备份和还原角色（Backup-and-Restoration-Roles）："><a href="#备份和还原角色（Backup-and-Restoration-Roles）：" class="headerlink" title="备份和还原角色（Backup and Restoration Roles）："></a>备份和还原角色（Backup and Restoration Roles）：</h4><ul><li>backup</li><li>restore</li></ul><h4 id="跨库角色（All-Database-Roles）："><a href="#跨库角色（All-Database-Roles）：" class="headerlink" title="跨库角色（All-Database Roles）："></a>跨库角色（All-Database Roles）：</h4><ul><li>readAnyDatabase：授予在所有数据库上读取数据的权限</li><li>readWriteAnyDatabase：授予在所有数据库上读写数据的权限</li><li>userAdminAnyDatabase：授予在所有数据库上管理User的权限</li><li>dbAdminAnyDatabase：授予管理所有数据库的权限</li></ul><h4 id="集群管理角色（Cluster-Administration-Roles）："><a href="#集群管理角色（Cluster-Administration-Roles）：" class="headerlink" title="集群管理角色（Cluster Administration Roles）："></a>集群管理角色（Cluster Administration Roles）：</h4><ul><li>clusterAdmin：授予管理集群的最高权限</li><li>clusterManager：授予管理和监控集群的权限</li><li>clusterMonitor：授予监控集群的权限，对监控工具具有readonly的权限</li><li>hostManager：管理Server</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;Docker环境&quot;&gt;&lt;a href=&quot;#Docker环境&quot; class=&quot;headerlink&quot; title=&quot;Docker环境&quot;&gt;&lt;/a&gt;Docker环境&lt;/h5&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl</summary>
      
    
    
    
    <category term="Tools" scheme="http://junonin.github.io/categories/Tools/"/>
    
    <category term="SQL" scheme="http://junonin.github.io/categories/Tools/SQL/"/>
    
    
    <category term="MongoDB" scheme="http://junonin.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Docker</title>
    <link href="http://junonin.github.io/posts/f5f9fa9b.html"/>
    <id>http://junonin.github.io/posts/f5f9fa9b.html</id>
    <published>2020-08-23T16:00:00.000Z</published>
    <updated>2020-10-10T06:20:46.486Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Dcoker依的赖环境"><a href="#Dcoker依的赖环境" class="headerlink" title="Dcoker依的赖环境"></a>Dcoker依的赖环境</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum -y install yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment">#阿里云镜像</span></span><br><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"><span class="comment">#安装Docker</span></span><br><span class="line">yum makecache fast</span><br><span class="line">yum -y install docker-ce</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="设置中央仓库"><a href="#设置中央仓库" class="headerlink" title="设置中央仓库"></a>设置中央仓库</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.D</span>ocker官方的中央仓库：这个仓库是镜像最全的，但是下载速度较慢。</span><br><span class="line">https:<span class="comment">//hub.docker.com/</span></span><br><span class="line"><span class="number">2.</span>国内的镜像网站：网易蜂巢，daoCloud等，下载速度快，但是镜像相对不全。</span><br><span class="line">https:<span class="comment">//c.163yun.com/hub#/home </span></span><br><span class="line">http:<span class="comment">//hub.daocloud.io/ （推荐使用）</span></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#需要创建 /etc/docker/daemon.json，并添加如下内容</span></span><br><span class="line"> &#123;</span><br><span class="line"> <span class="comment">#这个私库的服务地址</span></span><br><span class="line"><span class="string">&quot;registry-mirrors&quot;</span>:[<span class="string">&quot;https://registry.docker-cn.com&quot;</span>],</span><br><span class="line"> <span class="comment">#私库加速器</span></span><br><span class="line"><span class="string">&quot;insecure-registries&quot;</span>:[<span class="string">&quot;ip:port&quot;</span>]</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment">#重启两个服务</span></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h5 id="Docker镜像下载：-Docker-Hub"><a href="#Docker镜像下载：-Docker-Hub" class="headerlink" title="Docker镜像下载： Docker Hub"></a>Docker镜像下载： <a href="https://hub.docker.com/_/tomcat?tab=tags">Docker Hub</a></h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">启动Docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="meta">#</span><span class="bash">添加自启动列表</span></span><br><span class="line">systemctl enable docker</span><br><span class="line"><span class="meta">#</span><span class="bash">测试</span></span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">搜索镜像</span></span><br><span class="line">docker search tomcat</span><br><span class="line"><span class="meta">#</span><span class="bash">查看本地镜像</span></span><br><span class="line">docker images -a</span><br><span class="line"><span class="meta">#</span><span class="bash">删除本地镜像</span></span><br><span class="line">docker rmi 镜像标识</span><br><span class="line"><span class="meta">#</span><span class="bash">拉取镜像</span></span><br><span class="line">docker pull xxx[镜像地址]</span><br></pre></td></tr></table></figure><hr><h5 id="Docker镜像导入导出"><a href="#Docker镜像导入导出" class="headerlink" title="Docker镜像导入导出"></a>Docker镜像导入导出</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">如果因为网络原因可以通过硬盘的方式传输镜像，虽然不规范，但是有效，但是这种方式导出的镜像名称和版本都是null，需要手动修改</span><br><span class="line"><span class="meta">#</span><span class="bash">将本地的镜像导出</span></span><br><span class="line">docker save -o 导出的路径 镜像id</span><br><span class="line"><span class="meta">#</span><span class="bash">加载本地的镜像文件</span></span><br><span class="line">docker load -i 镜像文件</span><br><span class="line"><span class="meta">#</span><span class="bash">修改镜像文件</span></span><br><span class="line">docker tag 镜像id 新镜像名称：版本</span><br></pre></td></tr></table></figure><hr><h5 id="容器的操作"><a href="#容器的操作" class="headerlink" title="容器的操作"></a>容器的操作</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#运行容器需要定制具体镜像，如果镜像不存在，会直接下载</span></span><br><span class="line"><span class="comment">#简单操作</span></span><br><span class="line">docker run 镜像的标识|镜像的名称[:tag]</span><br><span class="line"><span class="comment">#常用的参数</span></span><br><span class="line">docker run -d -p 宿主机端口:容器端口 --name 容器名称 镜像的标识|镜像名称[:tag]</span><br><span class="line"><span class="comment">#-d:代表后台运行容器</span></span><br><span class="line"><span class="comment">#-p 宿主机端口:容器端口：为了映射当前Linux的端口和容器的端口</span></span><br><span class="line"><span class="comment">#--name 容器名称:指定容器的名称</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看全部正在运行的容器信息</span></span><br><span class="line">docker ps [-qa]</span><br><span class="line">docker ps -a</span><br><span class="line"><span class="comment">#-a 查看全部的容器，包括没有运行</span></span><br><span class="line"><span class="comment">#-q 只查看容器的标识</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="容器的启动，停止，删除等操作，后续会经常使用到"><a href="#容器的启动，停止，删除等操作，后续会经常使用到" class="headerlink" title="容器的启动，停止，删除等操作，后续会经常使用到"></a>容器的启动，停止，删除等操作，后续会经常使用到</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">重新启动容器</span></span><br><span class="line">docker restart 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash">启动停止运行的容器</span></span><br><span class="line">docker start 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash">停止指定的容器(删除容器前，需要先停止容器)</span></span><br><span class="line">docker stop 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash">停止全部容器</span></span><br><span class="line">docker stop $(docker ps -qa)</span><br><span class="line"><span class="meta">#</span><span class="bash">删除指定容器</span></span><br><span class="line">docker rm 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash">删除全部容器</span></span><br><span class="line">docker rm $(docker ps -qa)</span><br></pre></td></tr></table></figure><h5 id="宿主机和容器的操作"><a href="#宿主机和容器的操作" class="headerlink" title="宿主机和容器的操作"></a>宿主机和容器的操作</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">将宿主机的文件复制到容器内部的指定目录</span></span><br><span class="line">docker cp 文件名称 容器id:容器内部路径</span><br><span class="line">docker cp xxx.war 容器id:/usr/local/tomcat/webapps</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">查看容器日志，以查看容器运行的信息</span></span><br><span class="line">docker logs -f 容器id</span><br><span class="line"><span class="meta">#</span><span class="bash">-f：可以滚动查看日志的最后几行</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">可以进入容器的内部进行操作</span></span><br><span class="line">docker exec -it 容器id bash</span><br><span class="line"><span class="meta">#</span><span class="bash">退出容器内部</span></span><br><span class="line">exit</span><br></pre></td></tr></table></figure><h5 id="容器间的通讯方式"><a href="#容器间的通讯方式" class="headerlink" title="容器间的通讯方式"></a>容器间的通讯方式</h5><ol><li>container ip：port 容器ip端口</li><li>master ip:port 宿主机ip端口</li><li>container link 容器间的链接</li><li>network docker的network桥接</li></ol><h5 id="容器间的通讯–network"><a href="#容器间的通讯–network" class="headerlink" title="容器间的通讯–network"></a>容器间的通讯–network</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker network ls</span><br><span class="line"></span><br><span class="line">docker network create [别名]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">已经启动的镜像加入网络</span></span><br><span class="line">docker network connect --alias [别名] [network别名] container</span><br><span class="line"><span class="meta">#</span><span class="bash">断开镜像连接</span></span><br><span class="line">docker network disconnect network别名] container</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">将两个容器绑定在同一个network上，可以通过别名直接访问</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;Dcoker依的赖环境&quot;&gt;&lt;a href=&quot;#Dcoker依的赖环境&quot; class=&quot;headerlink&quot; title=&quot;Dcoker依的赖环境&quot;&gt;&lt;/a&gt;Dcoker依的赖环境&lt;/h5&gt;&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;</summary>
      
    
    
    
    <category term="Docker" scheme="http://junonin.github.io/categories/Docker/"/>
    
    
    <category term="Docker" scheme="http://junonin.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Centos</title>
    <link href="http://junonin.github.io/posts/cab4360e.html"/>
    <id>http://junonin.github.io/posts/cab4360e.html</id>
    <published>2020-05-31T16:00:00.000Z</published>
    <updated>2020-10-10T06:20:46.482Z</updated>
    
    <content type="html"><![CDATA[<h3 id="网络配置"><a href="#网络配置" class="headerlink" title="网络配置"></a>网络配置</h3><p>查看网络配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ip addr </span><br><span class="line"></span><br><span class="line">ifup ens33 #启用网络</span><br><span class="line"></span><br><span class="line">ifconfig     </span><br><span class="line">cd /sbin   可以用    ls | grep &quot;if&quot; 查看是否存在ifconfig命令</span><br><span class="line">sudo yum install net-tools</span><br></pre></td></tr></table></figure><p>配置文件位置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/sysconfig/network-scripts/ifcfg-eth33</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=eth0 #描述网卡对应的设备别名</span><br><span class="line">BOOTPROTO=static #设置网卡获得ip地址的方式，选项可以为为static，dhcp或bootp</span><br><span class="line">ONBOOT=yes #系统启动时是否设置此网络接口，设置为yes时，系统启动时激活此设备</span><br><span class="line"></span><br><span class="line">IPADDR=12.168.1.80 #只有网卡设置成static时，固定IP</span><br><span class="line">NETMASK=255.255.255.0 #子网掩码</span><br><span class="line">GATEWAY=192.168.174.2 #网关</span><br><span class="line">DNS1=192.168.174.2 #DNS</span><br><span class="line"></span><br><span class="line">NETWORK=192.168.1.0 #网卡对应的网络地址，也就是所属的网段</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service network restart #重启网络配置</span><br></pre></td></tr></table></figure><h3 id="SSH远程登录"><a href="#SSH远程登录" class="headerlink" title="SSH远程登录"></a>SSH远程登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep openssh-server #查看是否安装了openssh-server</span><br><span class="line">yum install openssh-server   #安装ssh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/ssh/sshd_config    #ssh端口配置</span><br><span class="line"></span><br><span class="line">Prot 22#监听端口</span><br><span class="line">ListenAddress 0.0.0.0#监听地址</span><br><span class="line">ListenAddress ：： #监听地址</span><br><span class="line"></span><br><span class="line">PermitRootLogin yes#允许远程登录</span><br><span class="line">PasswordAuthentication yes   #开启使用用户名密码来作为连接验证</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start ssh.service     #启动sshd</span><br><span class="line">ps -e | grep sshd  # 服务是否已经开启</span><br><span class="line">netstat -an | grep 22 #22 号端口是否开启监听</span><br><span class="line">sudo systemctl enable sshd#添加自启动列表</span><br></pre></td></tr></table></figure><h3 id="防火墙端口"><a href="#防火墙端口" class="headerlink" title="防火墙端口"></a>防火墙端口</h3><h5 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 开放8080端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=8080/tcp --permanent  </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">关闭5672端口</span></span><br><span class="line">firewall-cmd --zone=public --remove-port=5672/tcp --permanent </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置立即生效</span></span><br><span class="line">firewall-cmd --reload  </span><br></pre></td></tr></table></figure><h5 id="查看防火墙所有开放的端口"><a href="#查看防火墙所有开放的端口" class="headerlink" title="查看防火墙所有开放的端口"></a>查看防火墙所有开放的端口</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h5 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h5><p>如果要开放的端口太多，嫌麻烦，可以关闭防火墙，安全性自行评估</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure><h5 id="查看防火墙状态"><a href="#查看防火墙状态" class="headerlink" title="查看防火墙状态"></a>查看防火墙状态</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure><h5 id="查看监听的端口"><a href="#查看监听的端口" class="headerlink" title="查看监听的端口"></a>查看监听的端口</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnpt</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/09/30/0mOssJ.png" alt="img"></p><h6 id="PS-centos7默认没有-netstat-命令，需要安装-net-tools-工具"><a href="#PS-centos7默认没有-netstat-命令，需要安装-net-tools-工具" class="headerlink" title="PS:centos7默认没有 netstat 命令，需要安装 net-tools 工具"></a>PS:centos7默认没有 netstat 命令，需要安装 net-tools 工具</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y net-tools</span><br></pre></td></tr></table></figure><h5 id="检查端口被哪个进程占用"><a href="#检查端口被哪个进程占用" class="headerlink" title="检查端口被哪个进程占用"></a>检查端口被哪个进程占用</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnpt |grep 5672</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/09/30/0mOHeA.png" alt="img"></p><h5 id="查看进程的详细信息"><a href="#查看进程的详细信息" class="headerlink" title="查看进程的详细信息"></a>查看进程的详细信息</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps 6832</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/09/30/0mOqot.png" alt="img"></p><h5 id="中止进程"><a href="#中止进程" class="headerlink" title="中止进程"></a>中止进程</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 6832</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;网络配置&quot;&gt;&lt;a href=&quot;#网络配置&quot; class=&quot;headerlink&quot; title=&quot;网络配置&quot;&gt;&lt;/a&gt;网络配置&lt;/h3&gt;&lt;p&gt;查看网络配置&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="Linux" scheme="http://junonin.github.io/categories/Linux/"/>
    
    
    <category term="Centos" scheme="http://junonin.github.io/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Git</title>
    <link href="http://junonin.github.io/posts/69c3279c.html"/>
    <id>http://junonin.github.io/posts/69c3279c.html</id>
    <published>2019-09-22T16:00:00.000Z</published>
    <updated>2020-10-10T06:20:46.487Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GIT-config"><a href="#GIT-config" class="headerlink" title="GIT config"></a>GIT config</h2><blockquote><ul><li>配置config<br>配置git个人信息和生成ssh密钥<br>打开<code>git bash</code>，输入</li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br><span class="line">git config --global user.name &quot;JUNO&quot;</span><br><span class="line">git config --global user.email &quot;JUNOYAPIPI@gmail.com&quot;</span><br><span class="line">ssh-keygen -t rsa -C &quot;JUNOYAPIPI@gmail.com&quot;</span><br></pre></td></tr></table></figure><blockquote><ul><li>然后在GitHub导入SSH密匙（C:\Users\JUNO.ssh\id_rsa.pub）</li></ul></blockquote><a id="more"></a><h3 id="git绑定远程仓库"><a href="#git绑定远程仓库" class="headerlink" title="git绑定远程仓库"></a>git绑定远程仓库</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;junonin&#x2F;junonin.github.io.git</span><br></pre></td></tr></table></figure><p>然后查看是否绑定成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>注:删除远程仓库github(github是仓库名称)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm github</span><br></pre></td></tr></table></figure><h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><p><strong>git pull命令的作用是：取回远程主机某个分支的更新，再与本地的指定分支合并。</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull &#x3D; git fetch + git merge</span><br></pre></td></tr></table></figure><p>基本用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master:local</span><br></pre></td></tr></table></figure><p>将远程主机origin的master分支抓到本地，并和本地local分支合并</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>将远程主机origin的master分支抓到本地，并和本地当前分支合并<br>与pull相比fetch用法为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin master:local</span><br><span class="line">git merge local</span><br></pre></td></tr></table></figure><p><strong>相比起来git fetch更安全一些，因为再merge前，我们可以查看更新的情况，决定是否合并分支</strong></p><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><p><strong>git push命令的作用是：将本地版本库的分支推送到远程服务器上对应的分支。</strong><br>基本用法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push</span><br></pre></td></tr></table></figure><p>如果当前分支只有一个远程分支，那么主机名都可以省略，形如 git push，可以使用<code>git branch -r</code> ，查看远程的分支名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin</span><br></pre></td></tr></table></figure><p>如果当前分支与远程分支存在追踪关系，则本地分支和远程分支都可以省略，将当前分支推送到origin主机的对应分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p>如果远程分支被省略，如上则表示将本地分支推送到与之存在追踪关系的远程分支（通常两者同名），如果该远程分支不存在，则会被新建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin ：refs&#x2F;for&#x2F;master</span><br></pre></td></tr></table></figure><p>如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支，等同于 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin –delete master</span><br></pre></td></tr></table></figure><h2 id="重新部署恢复-Hexo"><a href="#重新部署恢复-Hexo" class="headerlink" title="重新部署恢复 Hexo"></a>重新部署恢复 Hexo</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><blockquote><ul><li>保留_config.yml，theme/，source/，scaffolds/，package.json，.gitignore，gulpfile.js 这些项目在目录下<code>Git bash</code></li></ul></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>查看是否本地可以运行<a href="http://localhost:4000/">Hexo</a>发布</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;GIT-config&quot;&gt;&lt;a href=&quot;#GIT-config&quot; class=&quot;headerlink&quot; title=&quot;GIT config&quot;&gt;&lt;/a&gt;GIT config&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;配置config&lt;br&gt;配置git个人信息和生成ssh密钥&lt;br&gt;打开&lt;code&gt;git bash&lt;/code&gt;，输入&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git config --list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.name &amp;quot;JUNO&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git config --global user.email &amp;quot;JUNOYAPIPI@gmail.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -t rsa -C &amp;quot;JUNOYAPIPI@gmail.com&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;然后在GitHub导入SSH密匙（C:\Users\JUNO.ssh\id_rsa.pub）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Tools" scheme="http://junonin.github.io/categories/Tools/"/>
    
    
    <category term="Git" scheme="http://junonin.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Wechat</title>
    <link href="http://junonin.github.io/posts/b5424c67.html"/>
    <id>http://junonin.github.io/posts/b5424c67.html</id>
    <published>2019-06-22T16:00:00.000Z</published>
    <updated>2020-10-10T06:20:46.491Z</updated>
    
    <content type="html"><![CDATA[<h3 id="双开"><a href="#双开" class="headerlink" title="双开"></a>双开</h3><blockquote><ul><li>将下面保存成.bat文件(注意：有中文需要保存ANSI编码格式/第一级路径需要加双引号)<br>start  C:&quot;Program Files (x86)”\Tencent\WeChat\wechat.exe<br>start  C:&quot;Program Files (x86)”\Tencent\WeChat\wechat.exe</li></ul></blockquote><a id="more"></a><h3 id="防撤回"><a href="#防撤回" class="headerlink" title="防撤回"></a>防撤回</h3><p>GitHub：<a href="https://github.com/huiyadanli/RevokeMsgPatcher">防撤回补丁</a><br>GitHub：<a href="https://github.com/36huo/wechat_anti_revoke">防撤回逻辑</a></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;双开&quot;&gt;&lt;a href=&quot;#双开&quot; class=&quot;headerlink&quot; title=&quot;双开&quot;&gt;&lt;/a&gt;双开&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;将下面保存成.bat文件(注意：有中文需要保存ANSI编码格式/第一级路径需要加双引号)&lt;br&gt;start  C:&amp;quot;Program Files (x86)”\Tencent\WeChat\wechat.exe&lt;br&gt;start  C:&amp;quot;Program Files (x86)”\Tencent\WeChat\wechat.exe&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Tools" scheme="http://junonin.github.io/categories/Tools/"/>
    
    
    <category term="Wechat" scheme="http://junonin.github.io/tags/Wechat/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://junonin.github.io/posts/4a17b156.html"/>
    <id>http://junonin.github.io/posts/4a17b156.html</id>
    <published>2019-05-31T16:00:00.000Z</published>
    <updated>2020-10-10T06:20:46.488Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br><span class="line">$ hexo s &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo s &amp;&amp; hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">$ hexo g -d </span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://junonin.github.io/categories/Hexo/"/>
    
    
    <category term="Texts" scheme="http://junonin.github.io/tags/Texts/"/>
    
  </entry>
  
</feed>
